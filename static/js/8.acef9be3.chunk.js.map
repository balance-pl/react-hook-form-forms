{"version":3,"sources":["forms/PropertyForm/style.module.scss","forms/PropertyForm/index.jsx","components/LinkButton/index.jsx","components/LinkButton/styles.module.scss","components/IconDelete/index.jsx","components/IconDelete/styles.module.scss"],"names":["module","exports","sellerTypes","id","name","purchaseOfAgreement","creditFunds","initialSellerData","surname","undefined","patronymic","phone","email","schema","yup","object","shape","sellerType","required","REQUIRED_MESSAGE","purchaseAgreement","gettingOfCreditFunds","sellers","of","inn","PropertyForm","useForm","resolver","yupResolver","defaultValues","creditingOfCreditFunds","snils","control","handleSubmit","trigger","getValues","useFieldArray","fields","remove","append","submitObjectData","e","a","preventDefault","objectData","alert","submitSellerData","index","data","console","log","size","onSubmit","render","field","fieldState","label","options","error","message","variant","onClick","map","style","padding","className","styles","PropertyForm__IconWrapper","length","PropertyForm__IconDelete","type","LinkButton","props","children","otherProps","IconDelete","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cn","d","x1","y1","x2","y2","defaultProps"],"mappings":"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","file":"static/js/8.acef9be3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PropertyForm__IconWrapper\":\"style_PropertyForm__IconWrapper__zpUv0\",\"PropertyForm__IconDelete\":\"style_PropertyForm__IconDelete__2RPni\"};","import React from 'react'\nimport { Controller, useFieldArray, useForm } from 'react-hook-form'\nimport * as yup from 'yup'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\nimport H from '../../components/H'\nimport SelectBox from '../../components/SelectBox'\nimport Row from '../../components/Grid/Row'\nimport Col from '../../components/Grid/Col'\nimport FormRow from '../../components/FormRow'\nimport Button from '../../components/Button'\nimport Input from '../../components/Input'\nimport LinkButton from '../../components/LinkButton'\nimport IconDelete from '../../components/IconDelete'\n\nimport { REQUIRED_MESSAGE } from '../../constants/errors'\n\nimport styles from './style.module.scss'\n\nconst sellerTypes = [\n  {\n    id: 1,\n    name: 'Продавец 1',\n  },\n  {\n    id: 2,\n    name: 'Продавец 2',\n  },\n]\n\nconst purchaseOfAgreement = [\n  {\n    id: 1,\n    name: 'Договор 1',\n  },\n  {\n    id: 2,\n    name: 'Договор 2',\n  },\n]\n\nconst creditFunds = [\n  {\n    id: 1,\n    name: 'тип 1',\n  },\n  {\n    id: 2,\n    name: 'тип 2',\n  },\n]\n\nconst initialSellerData = {\n  surname: undefined,\n  name: undefined,\n  patronymic: undefined,\n  phone: undefined,\n  email: undefined,\n}\n\nconst schema = yup.object({\n  object: yup.object().shape({\n    sellerType: yup.string().required(REQUIRED_MESSAGE),\n    purchaseAgreement: yup.string().required(REQUIRED_MESSAGE),\n    gettingOfCreditFunds: yup.string().required(REQUIRED_MESSAGE),\n  }),\n  sellers: yup.array().of(\n    yup.object().shape({\n      surname: yup.string().required(REQUIRED_MESSAGE),\n      name: yup.string().required(REQUIRED_MESSAGE),\n    })\n  ),\n  inn: yup.string().required(REQUIRED_MESSAGE),\n})\n\nfunction PropertyForm() {\n  const { control, handleSubmit, trigger, getValues } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      // Объект\n      object: {\n        sellerType: undefined,\n        purchaseAgreement: undefined,\n        gettingOfCreditFunds: undefined,\n        creditingOfCreditFunds: undefined,\n      },\n      // Продавцы\n      sellers: [initialSellerData],\n\n      // Прочая информация\n      inn: undefined,\n      snils: undefined,\n    },\n  })\n\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: 'sellers',\n  })\n\n  const onSubmit = (data) => {\n    console.log('main submit -> ', data)\n  }\n\n  const submitObjectData = async (e) => {\n    e.preventDefault()\n    const isValid = await trigger('object')\n    if (isValid) {\n      const objectData = getValues('object')\n      alert(objectData)\n    }\n  }\n\n  const submitSellerData = (index) => async () => {\n    const isValid = await trigger(`sellers.${index}`)\n    if (isValid) {\n      const data = getValues(`sellers.${index}`)\n      console.log('save seller data ->', data)\n    }\n  }\n\n  return (\n    <div>\n      <H size={1}>Объект</H>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormRow>\n          <Row>\n            <Col>\n              <Controller\n                control={control}\n                name=\"object.sellerType\"\n                render={({ field, fieldState }) => (\n                  <SelectBox\n                    {...field}\n                    label=\"Тип продавца *\"\n                    options={sellerTypes}\n                    error={fieldState.error?.message}\n                  />\n                )}\n              />\n            </Col>\n            <Col>\n              <Controller\n                control={control}\n                name=\"object.purchaseAgreement\"\n                render={({ field, fieldState }) => (\n                  <SelectBox\n                    {...field}\n                    label=\"Договор приобретения *\"\n                    options={purchaseOfAgreement}\n                    error={fieldState.error?.message}\n                  />\n                )}\n              />\n            </Col>\n          </Row>\n        </FormRow>\n        <FormRow>\n          <Row>\n            <Col>\n              <Controller\n                control={control}\n                name=\"object.gettingOfCreditFunds\"\n                render={({ field, fieldState }) => (\n                  <SelectBox\n                    {...field}\n                    label=\"Получение кредитных средств *\"\n                    options={creditFunds}\n                    error={fieldState.error?.message}\n                  />\n                )}\n              />\n            </Col>\n            <Col>\n              <Controller\n                control={control}\n                name=\"object.creditingOfCreditFunds\"\n                render={({ field }) => (\n                  <SelectBox\n                    {...field}\n                    label=\"Зачисление кредитных средств\"\n                    options={creditFunds}\n                  />\n                )}\n              />\n            </Col>\n          </Row>\n        </FormRow>\n        <FormRow>\n          <Row>\n            <Col />\n            <Col>\n              <Button variant=\"default\" onClick={submitObjectData}>\n                Сохранить\n              </Button>\n            </Col>\n          </Row>\n        </FormRow>\n\n        <H size={2}>Продавцы</H>\n        {fields.map((field, index) => {\n          return (\n            <div key={field.id}>\n              <div\n                style={{\n                  padding: '30px 0',\n                }}\n              >\n                <FormRow>\n                  <Row>\n                    <Col>\n                      <Controller\n                        control={control}\n                        name={`sellers.${index}.surname`}\n                        render={({ field, fieldState }) => (\n                          <Input\n                            {...field}\n                            label=\"Фамилия *\"\n                            error={fieldState.error?.message}\n                          />\n                        )}\n                      />\n                    </Col>\n\n                    <Col>\n                      <div className={styles.PropertyForm__IconWrapper}>\n                        <Controller\n                          control={control}\n                          name={`sellers.${index}.name`}\n                          render={({ field, fieldState }) => (\n                            <Input\n                              {...field}\n                              label=\"Имя *\"\n                              error={fieldState.error?.message}\n                            />\n                          )}\n                        />\n\n                        {fields.length > 1 && (\n                          <IconDelete\n                            className={styles.PropertyForm__IconDelete}\n                            onClick={() => {\n                              remove(index)\n                            }}\n                          />\n                        )}\n                      </div>\n                    </Col>\n                  </Row>\n                </FormRow>\n\n                <FormRow>\n                  <Row>\n                    <Col>\n                      <Controller\n                        control={control}\n                        name={`sellers.${index}.patronymic`}\n                        render={({ field }) => (\n                          <Input {...field} label=\"Отчество\" />\n                        )}\n                      />\n                    </Col>\n\n                    <Col>\n                      <Controller\n                        control={control}\n                        name={`sellers.${index}.phone`}\n                        render={({ field }) => (\n                          <Input {...field} label=\"Телефон\" />\n                        )}\n                      />\n                    </Col>\n                  </Row>\n                </FormRow>\n\n                <Row>\n                  <Col>\n                    <Controller\n                      control={control}\n                      name={`sellers.${index}.email`}\n                      render={({ field }) => <Input {...field} label=\"Email\" />}\n                    />\n                  </Col>\n                  <Col>\n                    <Button type=\"button\" onClick={submitSellerData(index)}>\n                      Сохранить\n                    </Button>\n                  </Col>\n                </Row>\n              </div>\n              <hr />\n            </div>\n          )\n        })}\n\n        <FormRow>\n          <LinkButton type=\"button\" onClick={() => append(initialSellerData)}>\n            Добавить продавца\n          </LinkButton>\n        </FormRow>\n\n        <FormRow>\n          <H size={2}>Прочая информация</H>\n\n          <Row>\n            <Col>\n              <Controller\n                control={control}\n                name=\"inn\"\n                render={({ field, fieldState }) => (\n                  <Input\n                    {...field}\n                    label=\"ИНН *\"\n                    error={fieldState.error?.message}\n                  />\n                )}\n              />\n            </Col>\n            <Col>\n              <Controller\n                control={control}\n                name=\"snils\"\n                render={({ field }) => <Input {...field} label=\"СНИЛС\" />}\n              />\n            </Col>\n          </Row>\n        </FormRow>\n\n        <Row>\n          <Col />\n          <Col>\n            <Button variant=\"primary\" type=\"submit\">\n              Далее\n            </Button>\n          </Col>\n        </Row>\n      </form>\n    </div>\n  )\n}\n\nexport default PropertyForm\n","import PropTypes from 'prop-types'\n\nimport styles from './styles.module.scss'\n\nfunction LinkButton(props) {\n  const { children, ...otherProps } = props\n\n  return (\n    <button {...otherProps} className={styles.LinkButton}>\n      {children}\n    </button>\n  )\n}\n\nLinkButton.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n}\n\nexport default LinkButton\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LinkButton\":\"styles_LinkButton__2YOvJ\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\n\nimport styles from './styles.module.scss'\n\nfunction IconDelete({ className, ...otherProps }) {\n  return (\n    <svg\n      {...otherProps}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className={cn(styles.IconDelete, className)}\n    >\n      <path d=\"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z\"></path>\n      <line x1=\"18\" y1=\"9\" x2=\"12\" y2=\"15\"></line>\n      <line x1=\"12\" y1=\"9\" x2=\"18\" y2=\"15\"></line>\n    </svg>\n  )\n}\n\nIconDelete.defaultProps = {\n  className: '',\n}\n\nIconDelete.propTypes = {\n  className: PropTypes.string,\n}\n\nexport default IconDelete\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconDelete\":\"styles_IconDelete__2ia--\"};"],"sourceRoot":""}