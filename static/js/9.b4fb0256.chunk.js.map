{"version":3,"sources":["forms/ChangeClientDataAdvancedForm/styles.module.scss","forms/ChangeClientDataAdvancedForm/index.jsx","components/InputSuggest/index.jsx","components/InputSuggest/styles.module.scss","components/LinkButton/index.jsx","components/LinkButton/styles.module.scss","components/IconDelete/index.jsx","components/IconDelete/styles.module.scss","forms/RegistrationForm/index.jsx","components/Checkbox/index.jsx","components/Checkbox/styles.module.scss"],"names":["module","exports","getFakeOptions","Promise","resolve","id","name","data","house","street","city","FAKE_REASONS_FOR_LIVING","validateAddressByDadata","object","test","value","dadata","isExistDadata","schema","Yup","people","of","shape","reasonOfLiving","when","is","Boolean","then","required","REQUIRED_MESSAGE","otherwise","addressRegistration","realAddress","initialPersonData","undefined","areTheSameAddresses","ChangeClientDataAdvancedForm","useForm","defaultValues","resolver","yupResolver","control","handleSubmit","watch","useFieldArray","fields","remove","append","handleAddressChange","field","_","onChange","handleDelete","index","className","styles","size","onSubmit","console","log","map","ChangeClientDataAdvancedForm__IconWrapper","render","fieldState","getOptionsMethod","error","message","label","ChangeClientDataAdvancedForm__IconDelete","onClick","checked","options","length","ChangeClientDataAdvancedForm__Separator","type","variant","removeBackslash","replace","InputSuggest","props","_getOptionsTimeout","state","activeOptionId","isGettingOptions","isSuggestWrapperVisible","handleInputBlur","bind","handleInputChange","handleInputFocus","handleKeyDown","handleSuggestChange","handleSuggestItemHover","callGetOptions","getOptions","makeNextSuggestOptionActive","makePrevSuggestOptionActive","scrollToActiveOption","suggestClose","suggestOpen","blur","focus","onBlur","this","setTimeout","setState","valueFormat","minLengthToCallGet","onFocus","e","onEnter","keyCode","preventDefault","activeOption","find","o","inputWrapper","querySelector","nameFormat","clearTimeout","optionsToShow","stateProps","catch","activeOptionIndex","findIndex","activeOptionDOM","element","suggestListDOM","suggest","activeOptionClientRect","getBoundingClientRect","suggestListClientRect","suggestClientRect","isActiveOptionOutOfTheBoxTop","top","isActiveOptionOutOfTheBoxBottom","height","scrollTop","input","formatOption","inputProps","componentClass","inputClass","InputSuggest__Input","suggestWrapperClass","cn","InputSuggest__SuggestWrapper","InputSuggest__SuggestWrapper_visible","suggestClass","InputSuggest__Suggest","ref","el","onKeyDown","optionSearchMask","onItemHover","Component","defaultProps","option","query","count","fromSuggest","LinkButton","children","otherProps","IconDelete","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","getFakeDadata","legalAddress","ogrn","kpp","inn","ceoFio","yup","email","password","nameOfTheLegalEntity","phone","Object","keys","RegistrationForm","mode","setValue","handleLegalEntityChange","shouldValidate","mask","Checkbox","labelClass","Checkbox__Label","Checkbox__Label_checked","target"],"mappings":"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","file":"static/js/9.b4fb0256.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChangeClientDataAdvancedForm__IconWrapper\":\"styles_ChangeClientDataAdvancedForm__IconWrapper__1_dFr\",\"ChangeClientDataAdvancedForm__IconDelete\":\"styles_ChangeClientDataAdvancedForm__IconDelete__-zzn5\",\"ChangeClientDataAdvancedForm__Separator\":\"styles_ChangeClientDataAdvancedForm__Separator__2ofcS\"};","import React from 'react'\nimport { Controller, useFieldArray, useForm } from 'react-hook-form'\n\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { object } from 'yup'\nimport * as Yup from 'yup'\n\nimport H from '../../components/H'\nimport FormRow from '../../components/FormRow'\nimport InputSuggest from '../../components/InputSuggest'\nimport Checkbox from '../../components/Checkbox'\nimport SelectBox from '../../components/SelectBox'\nimport Row from '../../components/Grid/Row'\nimport Col from '../../components/Grid/Col'\nimport Button from '../../components/Button'\n\nimport { isExistDadata } from '../RegistrationForm'\n\nimport { REQUIRED_MESSAGE } from '../../constants/errors'\n\nimport styles from './styles.module.scss'\nimport IconDelete from '../../components/IconDelete'\nimport LinkButton from '../../components/LinkButton'\n\nconst getFakeOptions = () =>\n  Promise.resolve([\n    {\n      id: 1,\n      name: 'г. Москва, ул. Тверская, д.123',\n      data: {\n        house: 123,\n        street: 'Тверская',\n        city: 'Москва',\n      },\n    },\n    {\n      id: 2,\n      name: 'г. Калининград, ул. Какая-то, д.12',\n      data: {\n        house: 12,\n        street: 'Какая-то',\n        city: 'Калининград',\n      },\n    },\n  ])\n\nconst FAKE_REASONS_FOR_LIVING = [\n  {\n    id: 1,\n    name: 'Аренда',\n  },\n  {\n    id: 2,\n    name: 'Проживание у родственников',\n  },\n]\n\nconst ADDRESS_NOT_FROM_DADATA_ERROR = 'Адрес должен быть из подсказки'\nconst validateAddressByDadata = object().test(\n  'Проверка адреса по наличию дадаты',\n  ADDRESS_NOT_FROM_DADATA_ERROR,\n  ({ value, dadata }) => {\n    if (value) {\n      return isExistDadata(dadata)\n    }\n    return true\n  }\n)\n\nconst schema = Yup.object({\n  people: Yup.array().of(\n    Yup.object().shape({\n      reasonOfLiving: Yup.string().when(['realAddress'], {\n        is: ({ value }) => Boolean(value),\n        then: Yup.string().required(REQUIRED_MESSAGE),\n        otherwise: Yup.string(),\n      }),\n      addressRegistration: validateAddressByDadata,\n      realAddress: validateAddressByDadata,\n    })\n  ),\n})\n\nconst initialPersonData = {\n  addressRegistration: {\n    value: undefined,\n    dadata: undefined,\n  },\n  realAddress: {\n    value: undefined,\n    dadata: undefined,\n  },\n  areTheSameAddresses: false,\n}\n\nfunction ChangeClientDataAdvancedForm() {\n  const { control, handleSubmit, watch } = useForm({\n    defaultValues: {\n      people: [initialPersonData],\n    },\n    resolver: yupResolver(schema),\n  })\n\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: 'people',\n  })\n\n  const onSubmit = (data) => {\n    console.log('success submit -> ', data)\n  }\n\n  const handleAddressChange = (field) => (value, _, dadata) => {\n    field.onChange({\n      value,\n      dadata,\n    })\n  }\n\n  const handleDelete = (index) => () => {\n    remove(index)\n  }\n\n  const handleAddPerson = () => {\n    append(initialPersonData)\n  }\n\n  return (\n    <div className={styles.ChangeClientDataAdvancedForm}>\n      <H size={2}>Изменение данных клиента (Продвинутое)</H>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {fields.map((field, index) => {\n          const areTheSameAddresses = watch(\n            `people.${index}.areTheSameAddresses`\n          )\n\n          return (\n            <div key={index}>\n              <FormRow>\n                <div\n                  className={styles.ChangeClientDataAdvancedForm__IconWrapper}\n                >\n                  <Controller\n                    name={`people.${index}.addressRegistration`}\n                    control={control}\n                    render={({ field, fieldState }) => (\n                      <InputSuggest\n                        {...field}\n                        getOptionsMethod={getFakeOptions}\n                        onChange={handleAddressChange(field)}\n                        value={field.value.value}\n                        error={fieldState.error?.message}\n                        label=\"Адрес регистрации\"\n                      />\n                    )}\n                  />\n                  <IconDelete\n                    className={styles.ChangeClientDataAdvancedForm__IconDelete}\n                    onClick={handleDelete(index)}\n                  />\n                </div>\n              </FormRow>\n\n              <FormRow>\n                <Controller\n                  name={`people.${index}.areTheSameAddresses`}\n                  control={control}\n                  render={({ field }) => (\n                    <Checkbox {...field} checked={field.value}>\n                      Адрес фактического проживания совпадает с адресом\n                      регистрации\n                    </Checkbox>\n                  )}\n                />\n              </FormRow>\n\n              {!areTheSameAddresses && (\n                <>\n                  <FormRow>\n                    <Controller\n                      name={`people.${index}.realAddress`}\n                      control={control}\n                      render={({ field, fieldState }) => (\n                        <InputSuggest\n                          {...field}\n                          getOptionsMethod={getFakeOptions}\n                          onChange={handleAddressChange(field)}\n                          value={field.value?.value}\n                          error={fieldState.error?.message}\n                          label=\"Адрес фактического проживания\"\n                        />\n                      )}\n                    />\n                  </FormRow>\n\n                  <FormRow>\n                    <Controller\n                      name={`people.${index}.reasonOfLiving`}\n                      control={control}\n                      render={({ field, fieldState }) => (\n                        <SelectBox\n                          {...field}\n                          options={FAKE_REASONS_FOR_LIVING}\n                          error={fieldState.error?.message}\n                          label=\"Основание для проживания\"\n                        />\n                      )}\n                    />\n                  </FormRow>\n                </>\n              )}\n\n              {fields.length !== index + 1 && (\n                <div\n                  className={styles.ChangeClientDataAdvancedForm__Separator}\n                />\n              )}\n            </div>\n          )\n        })}\n\n        <Row>\n          <Col>\n            <LinkButton type=\"button\" onClick={handleAddPerson}>\n              + Добавить адрес\n            </LinkButton>\n          </Col>\n          <Col>\n            <Button type=\"submit\" variant=\"primary\">\n              Сохранить\n            </Button>\n          </Col>\n        </Row>\n      </form>\n    </div>\n  )\n}\n\nexport default ChangeClientDataAdvancedForm\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\n\n// Components\nimport Input from '../Input'\nimport Suggest from '../Suggest'\n\nimport styles from './styles.module.scss'\n\nconst KEY_UP = 38\nconst KEY_DOWN = 40\nconst KEY_ENTER = 13\nconst KEY_ESC = 27\nconst SUGGEST_CLOSING_DELAY = 200\nconst SUGGEST_GET_OPTIONS_DELAY = 200\n\nconst removeBackslash = (value) =>\n  typeof value === 'string' ? value.replace(/\\\\/g, '') : value\n\nclass InputSuggest extends Component {\n  constructor(props) {\n    super(props)\n    this._getOptionsTimeout = null\n\n    this.state = {\n      activeOptionId: null,\n      isGettingOptions: false,\n      isSuggestWrapperVisible: false,\n      options: [],\n    }\n\n    this.handleInputBlur = this.handleInputBlur.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleInputFocus = this.handleInputFocus.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleSuggestChange = this.handleSuggestChange.bind(this)\n    this.handleSuggestItemHover = this.handleSuggestItemHover.bind(this)\n    this.callGetOptions = this.callGetOptions.bind(this)\n    this.getOptions = this.getOptions.bind(this)\n    this.makeNextSuggestOptionActive =\n      this.makeNextSuggestOptionActive.bind(this)\n    this.makePrevSuggestOptionActive =\n      this.makePrevSuggestOptionActive.bind(this)\n    this.scrollToActiveOption = this.scrollToActiveOption.bind(this)\n    this.suggestClose = this.suggestClose.bind(this)\n    this.suggestOpen = this.suggestOpen.bind(this)\n    this.blur = this.blur.bind(this)\n    this.focus = this.focus.bind(this)\n  }\n\n  // Input handlers\n  handleInputBlur(props) {\n    const { onBlur } = this.props\n    setTimeout(() => {\n      this.suggestClose()\n      this.setState({ activeOptionId: null, options: [] })\n      onBlur(props)\n    }, SUGGEST_CLOSING_DELAY)\n  }\n\n  handleInputChange(value) {\n    const valueFormat = removeBackslash(value)\n    const { onChange, minLengthToCallGet } = this.props\n    onChange(valueFormat, this.props)\n    if (valueFormat && valueFormat.length >= minLengthToCallGet) {\n      this.callGetOptions(valueFormat)\n    } else {\n      this.suggestClose()\n      this.setState({ activeOptionId: null, options: [] })\n    }\n  }\n\n  handleInputFocus() {\n    const { value, minLengthToCallGet, onFocus } = this.props\n    if (value && value.length >= minLengthToCallGet) {\n      this.callGetOptions(value)\n    }\n    onFocus(this.props)\n  }\n\n  handleKeyDown(e) {\n    const { isGettingOptions } = this.state\n    if (isGettingOptions) {\n      return false\n    }\n    const { onEnter, value } = this.props\n    const { activeOptionId, isSuggestWrapperVisible, options } = this.state\n\n    switch (e.keyCode) {\n      case KEY_DOWN:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makeNextSuggestOptionActive()\n        }\n        break\n      case KEY_UP:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makePrevSuggestOptionActive()\n        }\n        break\n      case KEY_ENTER:\n        e.preventDefault()\n\n        // Саджест открыт\n        if (isSuggestWrapperVisible) {\n          const activeOption = options.find((o) => o.id === activeOptionId)\n          // И есть выбранная опция\n          if (activeOption) {\n            this.handleSuggestChange(activeOption)\n          } else {\n            onEnter(value, false, this.props)\n          }\n          this.suggestClose()\n        } else {\n          onEnter(value, false, this.props)\n        }\n        this.inputWrapper.querySelector('input').blur()\n\n        break\n      case KEY_ESC:\n        this.handleInputBlur()\n        break\n      default:\n        break\n    }\n    return undefined\n  }\n\n  // Suggest handlers\n  handleSuggestChange({ name, data = {} }) {\n    const nameFormat = removeBackslash(name)\n    const { onChange, onEnter } = this.props\n    onChange(nameFormat, this.props, data)\n    onEnter(nameFormat, true, this.props, data)\n  }\n\n  handleSuggestItemHover({ id }) {\n    this.setState({ activeOptionId: id })\n  }\n\n  /* eslint-disable */\n  // Options methods\n  callGetOptions(value) {\n    if (this._getOptionsTimeout) {\n      clearTimeout(this._getOptionsTimeout)\n    }\n    this._getOptionsTimeout = setTimeout(() => {\n      this.getOptions(value)\n    }, SUGGEST_GET_OPTIONS_DELAY)\n  }\n  /* eslint-enable */\n\n  getOptions(value) {\n    this.setState({ isGettingOptions: true })\n    const { getOptionsMethod, optionsToShow } = this.props\n\n    getOptionsMethod(value, optionsToShow)\n      .then((options) => {\n        let stateProps = {\n          activeOptionId: null,\n          isGettingOptions: false,\n          options,\n        }\n        if (options.length > 0) {\n          this.suggestOpen()\n          // Если список опций в \"саджесте\" НЕ пустой,\n          // то выбираем первую опцию в качестве activeOptionId\n          stateProps = {\n            ...stateProps,\n            activeOptionId: options[0].id,\n          }\n        }\n        this.setState(stateProps, () => {\n          this.scrollToActiveOption()\n        })\n      })\n      .catch(() => {\n        this.setState({\n          activeOptionId: null,\n          isGettingOptions: false,\n          options: [],\n        })\n      })\n  }\n\n  makeNextSuggestOptionActive() {\n    const { options, activeOptionId } = this.state\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex === -1) {\n      activeOptionIndex = 0\n    } else if (activeOptionIndex + 1 < options.length) {\n      activeOptionIndex += 1\n    }\n    this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n      this.scrollToActiveOption()\n    })\n  }\n\n  makePrevSuggestOptionActive() {\n    const { options, activeOptionId } = this.state\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex > 0) {\n      activeOptionIndex -= 1\n      this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n        this.scrollToActiveOption()\n      })\n    }\n  }\n\n  scrollToActiveOption() {\n    const { activeOptionId } = this.state\n    const activeOptionDOM = this.element.querySelector(\n      `#select_box_option_${activeOptionId}`\n    )\n    const suggestListDOM = this.suggest.querySelector('ul')\n\n    if (activeOptionDOM && suggestListDOM) {\n      const activeOptionClientRect = activeOptionDOM.getBoundingClientRect()\n      const suggestListClientRect = suggestListDOM.getBoundingClientRect()\n      const suggestClientRect = this.suggest.getBoundingClientRect()\n\n      // вышли ЗА ВЕРХНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxTop =\n        activeOptionClientRect.top < suggestClientRect.top\n\n      // вышли ЗА НИЖНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxBottom =\n        activeOptionClientRect.top + activeOptionClientRect.height >\n        suggestClientRect.top + suggestClientRect.height\n\n      if (isActiveOptionOutOfTheBoxTop) {\n        // прокручиваем активный элемент К ВЕРХУ контейнера\n        const scrollTop = activeOptionClientRect.top - suggestListClientRect.top\n        this.suggest.scrollTop = scrollTop\n      } else if (isActiveOptionOutOfTheBoxBottom) {\n        // прокручиваем активный элемент К НИЗУ контейнера\n        const scrollTop =\n          activeOptionClientRect.top -\n          suggestListClientRect.top -\n          (suggestClientRect.height - activeOptionClientRect.height)\n        this.suggest.scrollTop = scrollTop\n      }\n    }\n  }\n\n  // Suggest methods\n  suggestClose() {\n    this.setState({\n      activeOptionId: null,\n      isSuggestWrapperVisible: false,\n    })\n  }\n\n  suggestOpen() {\n    this.setState({ isSuggestWrapperVisible: true })\n  }\n\n  // Input methods\n  blur() {\n    this.input.blur()\n  }\n\n  focus() {\n    this.input.focus()\n  }\n\n  render() {\n    const {\n      error,\n      label,\n      minLengthToCallGet,\n      optionsToShow,\n      value,\n      formatOption,\n      getOptionsMethod,\n      onBlur,\n      onChange,\n      onEnter,\n      onFocus,\n      ...inputProps\n    } = this.props\n\n    const { activeOptionId, isSuggestWrapperVisible, options } = this.state\n\n    const componentClass = styles.InputSuggest\n\n    const inputClass = styles.InputSuggest__Input\n\n    const suggestWrapperClass = cn(styles.InputSuggest__SuggestWrapper, {\n      [styles.InputSuggest__SuggestWrapper_visible]:\n        isSuggestWrapperVisible && options.length > 0,\n    })\n\n    const suggestClass = styles.InputSuggest__Suggest\n\n    return (\n      <div\n        ref={(el) => {\n          this.element = el\n          return this.element\n        }}\n        className={componentClass}\n      >\n        <div\n          className={inputClass}\n          ref={(el) => {\n            this.inputWrapper = el\n            return this.inputWrapper\n          }}\n        >\n          <Input\n            error={error}\n            label={label}\n            ref={(el) => {\n              this.input = el\n              return this.input\n            }}\n            value={value}\n            onBlur={this.handleInputBlur}\n            onChange={this.handleInputChange}\n            onFocus={this.handleInputFocus}\n            onKeyDown={this.handleKeyDown}\n            {...inputProps}\n          />\n        </div>\n        <div className={suggestWrapperClass}>\n          <div\n            className={suggestClass}\n            ref={(el) => {\n              this.suggest = el\n              return this.suggest\n            }}\n          >\n            <Suggest\n              activeOptionId={activeOptionId}\n              optionSearchMask={value}\n              options={options}\n              value={value}\n              formatOption={formatOption}\n              onChange={this.handleSuggestChange}\n              onItemHover={this.handleSuggestItemHover}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nInputSuggest.propTypes = {\n  error: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  minLengthToCallGet: PropTypes.number,\n  optionsToShow: PropTypes.number,\n  value: PropTypes.string,\n\n  formatOption: PropTypes.func,\n  getOptionsMethod: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onEnter: PropTypes.func,\n  onFocus: PropTypes.func,\n}\n\nInputSuggest.defaultProps = {\n  error: null,\n  label: null,\n  minLengthToCallGet: 2,\n  optionsToShow: 5,\n  value: null,\n\n  formatOption: (name, option) => name,\n  getOptionsMethod: (query, count) => Promise.resolve([]),\n  onBlur: (props) => {},\n  onChange: (name, props, data) => {},\n  onEnter: (value, fromSuggest, props, data) => {},\n  onFocus: (props) => {},\n}\n\nexport default InputSuggest\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputSuggest\":\"styles_InputSuggest__2A8yc\",\"InputSuggest__Input\":\"styles_InputSuggest__Input__3M6I2\",\"InputSuggest__SuggestWrapper\":\"styles_InputSuggest__SuggestWrapper__2oTlG\",\"InputSuggest__SuggestWrapper_closing\":\"styles_InputSuggest__SuggestWrapper_closing__2dtNH\",\"InputSuggest__SuggestWrapper_opening\":\"styles_InputSuggest__SuggestWrapper_opening__1rdBj\",\"InputSuggest__SuggestWrapper_visible\":\"styles_InputSuggest__SuggestWrapper_visible__7InKm\",\"InputSuggest__Suggest\":\"styles_InputSuggest__Suggest__23iYc\"};","import PropTypes from 'prop-types'\n\nimport styles from './styles.module.scss'\n\nfunction LinkButton(props) {\n  const { children, ...otherProps } = props\n\n  return (\n    <button {...otherProps} className={styles.LinkButton}>\n      {children}\n    </button>\n  )\n}\n\nLinkButton.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n}\n\nexport default LinkButton\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LinkButton\":\"styles_LinkButton__2YOvJ\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\n\nimport styles from './styles.module.scss'\n\nfunction IconDelete({ className, ...otherProps }) {\n  return (\n    <svg\n      {...otherProps}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className={cn(styles.IconDelete, className)}\n    >\n      <path d=\"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z\"></path>\n      <line x1=\"18\" y1=\"9\" x2=\"12\" y2=\"15\"></line>\n      <line x1=\"12\" y1=\"9\" x2=\"18\" y2=\"15\"></line>\n    </svg>\n  )\n}\n\nIconDelete.defaultProps = {\n  className: '',\n}\n\nIconDelete.propTypes = {\n  className: PropTypes.string,\n}\n\nexport default IconDelete\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconDelete\":\"styles_IconDelete__2ia--\"};","import React from 'react'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as yup from 'yup'\n\n// Components\nimport H from '../../components/H'\nimport FormRow from '../../components/FormRow'\nimport Row from '../../components/Grid/Row'\nimport Col from '../../components/Grid/Col'\nimport Input from '../../components/Input'\nimport Button from '../../components/Button'\nimport InputSuggest from '../../components/InputSuggest'\n\nimport { REQUIRED_MESSAGE } from '../../constants/errors'\n\nconst getFakeDadata = () =>\n  Promise.resolve([\n    {\n      id: 1,\n      name: 'Сверх Разум',\n      data: {\n        legalAddress: 'г. Калининград, ул. Ленина, д.124',\n        ogrn: '1238213818238128318',\n        kpp: '12391919239123912391923',\n        inn: '19934923942934',\n        ceoFio: 'Сверх Разум Разумович',\n      },\n    },\n    {\n      id: 2,\n      name: 'Джо Роган',\n      data: {\n        legalAddress: 'г. Санкт-Петербург, ул. Пойменная, д.22',\n        ogrn: '23942934923942934',\n        kpp: '39429348234828348',\n        inn: '93429349239423949234',\n        ceoFio: 'Джо Роган Подкастович',\n      },\n    },\n  ])\n\nconst schema = yup.object({\n  email: yup.string().required(REQUIRED_MESSAGE),\n  password: yup.string().required(REQUIRED_MESSAGE),\n  nameOfTheLegalEntity: yup.string().required(REQUIRED_MESSAGE),\n  phone: yup.string().required(REQUIRED_MESSAGE),\n  ogrn: yup.string().required(REQUIRED_MESSAGE),\n})\n\nexport const isExistDadata = (dadata = undefined) =>\n  dadata && Object.keys(dadata).length > 0\n\nfunction RegistrationForm() {\n  const { control, handleSubmit, setValue } = useForm({\n    mode: 'onChange',\n    defaultValues: {\n      email: undefined,\n      password: undefined,\n      nameOfTheLegalEntity: undefined,\n      legalAddress: undefined,\n      phone: undefined,\n      ogrn: undefined,\n      kpp: undefined,\n      inn: undefined,\n      ceoFio: undefined,\n    },\n    resolver: yupResolver(schema),\n  })\n\n  const onSubmit = (data) => {\n    console.log('success send -> ', data)\n  }\n\n  const handleLegalEntityChange = (field) => (value, _, dadata) => {\n    if (isExistDadata(dadata)) {\n      setValue('legalAddress', dadata.legalAddress)\n      setValue('ogrn', dadata.ogrn, { shouldValidate: true })\n      setValue('kpp', dadata.kpp)\n      setValue('inn', dadata.inn)\n      setValue('ceoFio', dadata.ceoFio)\n    }\n    field.onChange(value)\n  }\n\n  return (\n    <div>\n      <H size={2}>Регистрация</H>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormRow>\n          <Row>\n            <Col>\n              <Controller\n                control={control}\n                name=\"email\"\n                render={({ field, fieldState }) => (\n                  <Input\n                    {...field}\n                    label=\"Email *\"\n                    error={fieldState.error?.message}\n                  />\n                )}\n              />\n            </Col>\n            <Col>\n              <Controller\n                control={control}\n                name=\"password\"\n                render={({ field, fieldState }) => (\n                  <Input\n                    {...field}\n                    label=\"Пароль *\"\n                    error={fieldState.error?.message}\n                  />\n                )}\n              />\n            </Col>\n          </Row>\n        </FormRow>\n        <FormRow>\n          <Controller\n            control={control}\n            name=\"nameOfTheLegalEntity\"\n            render={({ field, fieldState }) => (\n              <InputSuggest\n                {...field}\n                getOptionsMethod={getFakeDadata}\n                onChange={handleLegalEntityChange(field)}\n                label=\"Название юр. лица *\"\n                error={fieldState.error?.message}\n              />\n            )}\n          />\n        </FormRow>\n        <FormRow>\n          <Controller\n            control={control}\n            name=\"legalAddress\"\n            render={({ field, fieldState }) => (\n              <Input\n                {...field}\n                error={fieldState.error?.message}\n                label=\"Юридический адрес\"\n              />\n            )}\n          />\n        </FormRow>\n        <FormRow>\n          <Col>\n            <Controller\n              name=\"phone\"\n              control={control}\n              render={({ field, fieldState }) => (\n                <Input\n                  {...field}\n                  mask=\"+7 (999) 999-99-99\"\n                  error={fieldState.error?.message}\n                  label=\"Телефон *\"\n                />\n              )}\n            />\n          </Col>\n          <Col />\n        </FormRow>\n        <FormRow>\n          <Row>\n            <Col>\n              <Controller\n                control={control}\n                name=\"ogrn\"\n                render={({ field, fieldState }) => (\n                  <Input\n                    {...field}\n                    mask=\"9999 99999 9999 9999\"\n                    error={fieldState.error?.message}\n                    label=\"ОГРН\"\n                  />\n                )}\n              />\n            </Col>\n            <Col>\n              <Controller\n                control={control}\n                name=\"kpp\"\n                render={({ field, fieldState }) => (\n                  <Input\n                    {...field}\n                    mask=\"999999999999\"\n                    error={fieldState.error?.message}\n                    label=\"КПП\"\n                  />\n                )}\n              />\n            </Col>\n          </Row>\n        </FormRow>\n\n        <FormRow>\n          <Row>\n            <Col>\n              <Controller\n                control={control}\n                name=\"inn\"\n                render={({ field, fieldState }) => (\n                  <Input\n                    {...field}\n                    mask=\"999999999999\"\n                    error={fieldState.error?.message}\n                    label=\"ИНН\"\n                  />\n                )}\n              />\n            </Col>\n            <Col>\n              <Controller\n                control={control}\n                name=\"ceoFio\"\n                render={({ field, fieldState }) => (\n                  <Input\n                    {...field}\n                    error={fieldState.error?.message}\n                    label=\"ФИО генерального директора\"\n                  />\n                )}\n              />\n            </Col>\n          </Row>\n        </FormRow>\n\n        <Row>\n          <Col />\n          <Col>\n            <Button variant=\"primary\">Создать аккаунт</Button>\n          </Col>\n        </Row>\n      </form>\n    </div>\n  )\n}\n\nexport default RegistrationForm\n","import PropTypes from 'prop-types'\nimport cn from 'classnames'\n\nimport styles from './styles.module.scss'\n\nfunction Checkbox(props) {\n  const { checked, children, onChange, ...otherProps } = props\n\n  // Handlers\n  function handleChange(e) {\n    onChange(e.target.checked, props)\n  }\n\n  const labelClass = cn(styles.Checkbox__Label, {\n    [styles.Checkbox__Label_checked]: checked,\n  })\n\n  return (\n    <div className={styles.Checkbox}>\n      <label className={labelClass}>\n        <input\n          {...otherProps}\n          checked={checked}\n          type=\"checkbox\"\n          onChange={handleChange}\n        />\n        {children}\n      </label>\n    </div>\n  )\n}\n\nCheckbox.propTypes = {\n  checked: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n  onChange: PropTypes.func,\n}\nCheckbox.defaultProps = {\n  checked: false,\n  onChange: (checked, props) => {},\n}\n\nexport default Checkbox\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checkbox\":\"styles_Checkbox__FLcPe\",\"Checkbox__Label\":\"styles_Checkbox__Label__1L6CP\",\"Checkbox__Label_checked\":\"styles_Checkbox__Label_checked__2k729\"};"],"sourceRoot":""}