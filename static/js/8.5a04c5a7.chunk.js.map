{"version":3,"sources":["forms/PropertyForm/style.module.scss","forms/PropertyForm/components/ObjectFields/fakeData.js","forms/PropertyForm/components/ObjectFields/index.jsx","forms/PropertyForm/components/SellersFields/index.jsx","forms/PropertyForm/index.jsx","components/LinkButton/index.jsx","components/LinkButton/styles.module.scss","components/IconDelete/index.jsx","components/IconDelete/styles.module.scss"],"names":["module","exports","sellerTypes","id","name","purchaseOfAgreement","creditFunds","ObjectFields","control","submitObjectData","FormRow","Row","Col","render","field","fieldState","SelectBox","label","options","error","message","Button","variant","onClick","SellersForm","submitSellerData","useFieldArray","fields","remove","append","H","size","style","marginBottom","map","index","padding","Input","className","styles","PropertyForm__IconWrapper","length","IconDelete","PropertyForm__IconDelete","mask","type","LinkButton","initialSellerData","surname","undefined","patronymic","phone","email","initialObjectData","sellerType","purchaseAgreement","gettingOfCreditFunds","creditingOfCreditFunds","schema","yup","object","shape","required","REQUIRED_MESSAGE","sellers","of","ERROR_MESSAGE_INVALID_EMAIL","inn","PropertyForm","useForm","resolver","yupResolver","defaultValues","snils","handleSubmit","trigger","getValues","e","a","preventDefault","objectData","console","log","onSubmit","data","SellersFields","props","children","otherProps","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cn","d","x1","y1","x2","y2","defaultProps"],"mappings":"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","file":"static/js/8.5a04c5a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PropertyForm__IconWrapper\":\"style_PropertyForm__IconWrapper__zpUv0\",\"PropertyForm__IconDelete\":\"style_PropertyForm__IconDelete__2RPni\"};","export const sellerTypes = [\n  {\n    id: 1,\n    name: 'Продавец 1',\n  },\n  {\n    id: 2,\n    name: 'Продавец 2',\n  },\n]\n\nexport const purchaseOfAgreement = [\n  {\n    id: 1,\n    name: 'Договор 1',\n  },\n  {\n    id: 2,\n    name: 'Договор 2',\n  },\n]\n\nexport const creditFunds = [\n  {\n    id: 1,\n    name: 'тип 1',\n  },\n  {\n    id: 2,\n    name: 'тип 2',\n  },\n]\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport FormRow from '../../../../components/FormRow'\nimport Row from '../../../../components/Grid/Row'\nimport Col from '../../../../components/Grid/Col'\nimport { Controller } from 'react-hook-form'\nimport SelectBox from '../../../../components/SelectBox'\nimport Button from '../../../../components/Button'\n\nimport { sellerTypes, creditFunds, purchaseOfAgreement } from './fakeData'\n\nfunction ObjectFields({ control, submitObjectData }) {\n  return (\n    <>\n      <FormRow>\n        <Row>\n          <Col>\n            <Controller\n              control={control}\n              name=\"object.sellerType\"\n              render={({ field, fieldState }) => (\n                <SelectBox\n                  {...field}\n                  label=\"Тип продавца *\"\n                  options={sellerTypes}\n                  error={fieldState.error?.message}\n                />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"object.purchaseAgreement\"\n              render={({ field, fieldState }) => (\n                <SelectBox\n                  {...field}\n                  label=\"Договор приобретения *\"\n                  options={purchaseOfAgreement}\n                  error={fieldState.error?.message}\n                />\n              )}\n            />\n          </Col>\n        </Row>\n      </FormRow>\n      <FormRow>\n        <Row>\n          <Col>\n            <Controller\n              control={control}\n              name=\"object.gettingOfCreditFunds\"\n              render={({ field, fieldState }) => (\n                <SelectBox\n                  {...field}\n                  label=\"Получение кредитных средств *\"\n                  options={creditFunds}\n                  error={fieldState.error?.message}\n                />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"object.creditingOfCreditFunds\"\n              render={({ field }) => (\n                <SelectBox\n                  {...field}\n                  label=\"Зачисление кредитных средств\"\n                  options={creditFunds}\n                />\n              )}\n            />\n          </Col>\n        </Row>\n      </FormRow>\n      <FormRow>\n        <Row>\n          <Col />\n          <Col>\n            <Button variant=\"default\" onClick={submitObjectData}>\n              Сохранить\n            </Button>\n          </Col>\n        </Row>\n      </FormRow>\n    </>\n  )\n}\n\nObjectFields.propTypes = {\n  control: PropTypes.object,\n  submitObjectData: PropTypes.func,\n}\n\nexport default ObjectFields\n","import React from 'react'\nimport { Controller, useFieldArray } from 'react-hook-form'\nimport PropTypes from 'prop-types'\n\nimport H from '../../../../components/H'\nimport FormRow from '../../../../components/FormRow'\nimport Row from '../../../../components/Grid/Row'\nimport Col from '../../../../components/Grid/Col'\nimport Input from '../../../../components/Input'\nimport IconDelete from '../../../../components/IconDelete'\nimport Button from '../../../../components/Button'\n\nimport styles from '../../style.module.scss'\nimport LinkButton from '../../../../components/LinkButton'\nimport { initialSellerData } from '../../index'\n\nfunction SellersForm({ control, submitSellerData }) {\n  const { fields, remove, append } = useFieldArray({\n    control,\n    name: 'sellers',\n  })\n\n  return (\n    <>\n      <H\n        size={2}\n        style={{\n          marginBottom: 0,\n        }}\n      >\n        Продавцы\n      </H>\n      {fields.map((field, index) => {\n        return (\n          <div key={field.id}>\n            <div\n              style={{\n                padding: '30px 0',\n              }}\n            >\n              <FormRow>\n                <Row>\n                  <Col>\n                    <Controller\n                      control={control}\n                      name={`sellers.${index}.surname`}\n                      render={({ field, fieldState }) => (\n                        <Input\n                          {...field}\n                          label=\"Фамилия *\"\n                          error={fieldState.error?.message}\n                        />\n                      )}\n                    />\n                  </Col>\n\n                  <Col>\n                    <div className={styles.PropertyForm__IconWrapper}>\n                      <Controller\n                        control={control}\n                        name={`sellers.${index}.name`}\n                        render={({ field, fieldState }) => (\n                          <Input\n                            {...field}\n                            label=\"Имя *\"\n                            error={fieldState.error?.message}\n                          />\n                        )}\n                      />\n\n                      {fields.length > 1 && (\n                        <IconDelete\n                          className={styles.PropertyForm__IconDelete}\n                          onClick={() => {\n                            remove(index)\n                          }}\n                        />\n                      )}\n                    </div>\n                  </Col>\n                </Row>\n              </FormRow>\n\n              <FormRow>\n                <Row>\n                  <Col>\n                    <Controller\n                      control={control}\n                      name={`sellers.${index}.patronymic`}\n                      render={({ field }) => (\n                        <Input {...field} label=\"Отчество\" />\n                      )}\n                    />\n                  </Col>\n\n                  <Col>\n                    <Controller\n                      control={control}\n                      name={`sellers.${index}.phone`}\n                      render={({ field }) => (\n                        <Input\n                          {...field}\n                          label=\"Телефон\"\n                          mask=\"+7 (999) 999-99-99\"\n                        />\n                      )}\n                    />\n                  </Col>\n                </Row>\n              </FormRow>\n\n              <Row>\n                <Col>\n                  <Controller\n                    control={control}\n                    name={`sellers.${index}.email`}\n                    render={({ field, fieldState }) => (\n                      <Input\n                        {...field}\n                        label=\"Email\"\n                        error={fieldState.error?.message}\n                      />\n                    )}\n                  />\n                </Col>\n                <Col>\n                  <Button type=\"button\" onClick={submitSellerData(index)}>\n                    Сохранить\n                  </Button>\n                </Col>\n              </Row>\n            </div>\n            <hr />\n          </div>\n        )\n      })}\n\n      <FormRow>\n        <LinkButton type=\"button\" onClick={() => append(initialSellerData)}>\n          Добавить продавца\n        </LinkButton>\n      </FormRow>\n    </>\n  )\n}\n\nSellersForm.propTypes = {\n  control: PropTypes.object,\n  submitSellerData: PropTypes.func,\n}\n\nexport default SellersForm\n","import React from 'react'\nimport { Controller, useForm } from 'react-hook-form'\nimport * as yup from 'yup'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\nimport H from '../../components/H'\nimport Row from '../../components/Grid/Row'\nimport Col from '../../components/Grid/Col'\nimport FormRow from '../../components/FormRow'\nimport Button from '../../components/Button'\nimport Input from '../../components/Input'\n\n// Forms\nimport ObjectFields from './components/ObjectFields'\nimport SellersFields from './components/SellersFields'\n\nimport {\n  ERROR_MESSAGE_INVALID_EMAIL,\n  REQUIRED_MESSAGE,\n} from '../../constants/errors'\n\nexport const initialSellerData = {\n  surname: undefined,\n  name: undefined,\n  patronymic: undefined,\n  phone: undefined,\n  email: undefined,\n}\n\nconst initialObjectData = {\n  sellerType: undefined,\n  purchaseAgreement: undefined,\n  gettingOfCreditFunds: undefined,\n  creditingOfCreditFunds: undefined,\n}\n\nconst schema = yup.object({\n  object: yup.object().shape({\n    sellerType: yup.string().required(REQUIRED_MESSAGE),\n    purchaseAgreement: yup.string().required(REQUIRED_MESSAGE),\n    gettingOfCreditFunds: yup.string().required(REQUIRED_MESSAGE),\n  }),\n  sellers: yup.array().of(\n    yup.object().shape({\n      surname: yup.string().required(REQUIRED_MESSAGE),\n      name: yup.string().required(REQUIRED_MESSAGE),\n      email: yup.string().email(ERROR_MESSAGE_INVALID_EMAIL),\n    })\n  ),\n  inn: yup.string().required(REQUIRED_MESSAGE),\n})\n\nfunction PropertyForm() {\n  const { control, handleSubmit, trigger, getValues } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      // Объект\n      object: initialObjectData,\n      // Продавцы\n      sellers: [initialSellerData],\n      // Прочая информация\n      inn: undefined,\n      snils: undefined,\n    },\n  })\n\n  const onSubmit = (data) => {\n    console.log('main submit -> ', data)\n  }\n\n  const submitObjectData = async (e) => {\n    e.preventDefault()\n    const isValid = await trigger('object')\n    if (isValid) {\n      const objectData = getValues('object')\n      console.log('object submit ->', objectData)\n    }\n  }\n\n  const submitSellerData = (index) => async () => {\n    const isValid = await trigger(`sellers.${index}`)\n    if (isValid) {\n      const data = getValues(`sellers.${index}`)\n      console.log('save seller data ->', data)\n    }\n  }\n\n  return (\n    <div>\n      <H size={1}>Объект</H>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <ObjectFields control={control} submitObjectData={submitObjectData} />\n        <SellersFields control={control} submitSellerData={submitSellerData} />\n        <FormRow>\n          <H size={2}>Прочая информация</H>\n\n          <Row>\n            <Col>\n              <Controller\n                control={control}\n                name=\"inn\"\n                render={({ field, fieldState }) => (\n                  <Input\n                    {...field}\n                    label=\"ИНН *\"\n                    mask=\"999999999999\"\n                    error={fieldState.error?.message}\n                  />\n                )}\n              />\n            </Col>\n            <Col>\n              <Controller\n                control={control}\n                name=\"snils\"\n                render={({ field }) => (\n                  <Input {...field} label=\"СНИЛС\" mask=\"999-999-999 99\" />\n                )}\n              />\n            </Col>\n          </Row>\n        </FormRow>\n\n        <Row>\n          <Col />\n          <Col>\n            <Button variant=\"primary\" type=\"submit\">\n              Далее\n            </Button>\n          </Col>\n        </Row>\n      </form>\n    </div>\n  )\n}\n\nexport default PropertyForm\n","import PropTypes from 'prop-types'\n\nimport styles from './styles.module.scss'\n\nfunction LinkButton(props) {\n  const { children, ...otherProps } = props\n\n  return (\n    <button {...otherProps} className={styles.LinkButton}>\n      {children}\n    </button>\n  )\n}\n\nLinkButton.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n}\n\nexport default LinkButton\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LinkButton\":\"styles_LinkButton__2YOvJ\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\n\nimport styles from './styles.module.scss'\n\nfunction IconDelete({ className, ...otherProps }) {\n  return (\n    <svg\n      {...otherProps}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className={cn(styles.IconDelete, className)}\n    >\n      <path d=\"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z\"></path>\n      <line x1=\"18\" y1=\"9\" x2=\"12\" y2=\"15\"></line>\n      <line x1=\"12\" y1=\"9\" x2=\"18\" y2=\"15\"></line>\n    </svg>\n  )\n}\n\nIconDelete.defaultProps = {\n  className: '',\n}\n\nIconDelete.propTypes = {\n  className: PropTypes.string,\n}\n\nexport default IconDelete\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconDelete\":\"styles_IconDelete__2ia--\"};"],"sourceRoot":""}