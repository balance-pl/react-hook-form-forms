{"version":3,"sources":["forms/EmployeeInfoForm/validationSchema.js","forms/EmployeeInfoForm/index.jsx","components/InputSuggest/index.jsx","components/InputSuggest/styles.module.scss","helpers/formatters.js","constants/regexps.js","helpers/validators.js","components/Grid/index.js","components/InputDate/styles.module.scss","icons/IconCalendar.jsx","components/InputDate/index.jsx"],"names":["employerSchema","yup","surname","required","REQUIRED_MESSAGE","name","gender","birthday","email","ERROR_MESSAGE_INVALID_EMAIL","phone","test","VALIDATION_PHONE_ERROR","value","other","validatePhone","formatNumber","fakeAddresses","Promise","resolve","id","data","key1","key2","fakeSurnames","fakeEmployers","EmployeeInfoForm","useForm","resolver","yupResolver","control","handleSubmit","autoComplete","onSubmit","alert","JSON","stringify","H","size","FormRow","render","field","fieldState","InputSuggest","getOptionsMethod","label","error","message","SelectBox","options","InputDate","Input","mask","Button","variant","removeBackslash","replace","props","_getOptionsTimeout","state","activeOptionId","isGettingOptions","isSuggestWrapperVisible","handleInputBlur","bind","handleInputChange","handleInputFocus","handleKeyDown","handleSuggestChange","handleSuggestItemHover","callGetOptions","getOptions","makeNextSuggestOptionActive","makePrevSuggestOptionActive","scrollToActiveOption","suggestClose","suggestOpen","blur","focus","onBlur","this","setTimeout","setState","valueFormat","onChange","minLengthToCallGet","length","onFocus","e","onEnter","keyCode","preventDefault","activeOption","find","o","inputWrapper","querySelector","nameFormat","clearTimeout","optionsToShow","then","stateProps","catch","activeOptionIndex","findIndex","activeOptionDOM","element","suggestListDOM","suggest","activeOptionClientRect","getBoundingClientRect","suggestListClientRect","suggestClientRect","isActiveOptionOutOfTheBoxTop","top","isActiveOptionOutOfTheBoxBottom","height","scrollTop","input","formatOption","inputProps","componentClass","styles","inputClass","InputSuggest__Input","suggestWrapperClass","cn","InputSuggest__SuggestWrapper","InputSuggest__SuggestWrapper_visible","suggestClass","InputSuggest__Suggest","ref","el","className","onKeyDown","optionSearchMask","onItemHover","Component","defaultProps","option","query","count","fromSuggest","module","exports","String","PHONE_REGEXP","IconCalendar","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","x1","y1","x2","y2","InputDate__Icon"],"mappings":"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","file":"static/js/12.c351eb35.chunk.js","sourcesContent":["import * as yup from 'yup'\n\nimport {\n  ERROR_MESSAGE_INVALID_EMAIL,\n  REQUIRED_MESSAGE,\n  VALIDATION_PHONE_ERROR,\n} from '../../constants/errors'\n\n// Helpers\nimport { formatNumber } from '../../helpers/formatters'\nimport { validatePhone } from '../../helpers/validators'\n\nexport const employerSchema = yup.object({\n  surname: yup.string().required(REQUIRED_MESSAGE),\n  name: yup.string().required(REQUIRED_MESSAGE),\n  gender: yup.string().required(REQUIRED_MESSAGE),\n  birthday: yup.string().required(REQUIRED_MESSAGE),\n  email: yup.string().email(ERROR_MESSAGE_INVALID_EMAIL),\n  phone: yup\n    .string()\n    .test('checkPhone', VALIDATION_PHONE_ERROR, (value, other) => {\n      if (!value) return true\n      return validatePhone(formatNumber(value))\n    })\n    .required(REQUIRED_MESSAGE),\n})\n","import { Controller, useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\n// Components\nimport Button from '../../components/Button'\nimport FormRow from '../../components/FormRow'\nimport { Col, Row } from '../../components/Grid'\nimport H from '../../components/H'\nimport Input from '../../components/Input'\nimport InputDate from '../../components/InputDate'\nimport InputSuggest from '../../components/InputSuggest'\nimport SelectBox from '../../components/SelectBox'\n\n// Helpers\nimport { employerSchema } from './validationSchema'\n\nconst fakeAddresses = () =>\n  Promise.resolve([\n    {\n      id: 1,\n      name: 'г. Москва, ул. Ленина д.23',\n      data: {\n        key1: '1',\n      },\n    },\n    {\n      id: 2,\n      name: 'г. Санкт-Петербург, ул. Пойменная д.23',\n      data: {\n        key2: '2',\n      },\n    },\n  ])\n\nconst fakeSurnames = () =>\n  Promise.resolve([\n    {\n      id: 1,\n      name: 'Иванов 1',\n      data: {\n        key1: '1',\n      },\n    },\n    {\n      id: 2,\n      name: 'Иванов 2',\n      data: {\n        key2: '2',\n      },\n    },\n  ])\n\nconst fakeEmployers = () =>\n  Promise.resolve([\n    {\n      id: 1,\n      name: 'ООО СЫКТЫВКАР КОРПОРЕЙШН',\n      data: {\n        key1: '1',\n      },\n    },\n    {\n      id: 2,\n      name: 'ГАЗПРОМ',\n      data: {\n        key2: '2',\n      },\n    },\n  ])\n\nfunction EmployeeInfoForm() {\n  const { control, handleSubmit } = useForm({\n    resolver: yupResolver(employerSchema),\n  })\n\n  const onSubmit = (data) => {\n    alert(JSON.stringify(data))\n  }\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n      <H size=\"1\">Информация о сотруднике</H>\n      <FormRow>\n        <Controller\n          name=\"surname\"\n          control={control}\n          render={({ field, fieldState }) => (\n            <InputSuggest\n              {...field}\n              getOptionsMethod={fakeSurnames}\n              label=\"Фамилия *\"\n              error={fieldState.error?.message}\n            />\n          )}\n        />\n      </FormRow>\n      <FormRow>\n        <Controller\n          name=\"name\"\n          control={control}\n          render={({ field, fieldState }) => (\n            <InputSuggest\n              {...field}\n              getOptionsMethod={fakeSurnames}\n              label=\"Имя *\"\n              error={fieldState.error?.message}\n            />\n          )}\n        />\n      </FormRow>\n      <FormRow>\n        <Controller\n          name=\"patronymic\"\n          control={control}\n          render={({ field, fieldState }) => (\n            <InputSuggest\n              {...field}\n              error={fieldState.error?.message}\n              getOptionsMethod={fakeSurnames}\n              label=\"Отчество\"\n            />\n          )}\n        />\n      </FormRow>\n      <Row>\n        <Col>\n          <FormRow>\n            <Controller\n              name=\"gender\"\n              control={control}\n              render={({ field, fieldState }) => (\n                <SelectBox\n                  {...field}\n                  error={fieldState.error?.message}\n                  label=\"Пол *\"\n                  options={[\n                    { id: 'male', name: 'мужской' },\n                    { id: 'female', name: 'женский' },\n                  ]}\n                />\n              )}\n            />\n          </FormRow>\n        </Col>\n        <Col>\n          <FormRow>\n            <Controller\n              control={control}\n              name=\"birthday\"\n              render={({ field, fieldState }) => (\n                <InputDate\n                  {...field}\n                  label=\"Дата рождения *\"\n                  error={fieldState.error?.message}\n                />\n              )}\n            />\n          </FormRow>\n        </Col>\n        <Col>\n          <FormRow>\n            <Controller\n              name=\"phone\"\n              control={control}\n              render={({ field, fieldState }) => (\n                <Input\n                  {...field}\n                  label=\"Мобильный телефон *\"\n                  mask=\"+7 (999) 999-99-99\"\n                  error={fieldState.error?.message}\n                />\n              )}\n            />\n          </FormRow>\n        </Col>\n        <Col>\n          <FormRow>\n            <Controller\n              name=\"email\"\n              control={control}\n              render={({ field, fieldState }) => (\n                <Input\n                  {...field}\n                  label=\"Email\"\n                  error={fieldState.error?.message}\n                />\n              )}\n            />\n          </FormRow>\n        </Col>\n      </Row>\n      <FormRow>\n        <Controller\n          control={control}\n          name=\"address\"\n          render={({ field, fieldState }) => (\n            <InputSuggest\n              {...field}\n              getOptionsMethod={fakeAddresses}\n              label=\"Адрес постоянной регистрации\"\n              error={fieldState.error?.message}\n            />\n          )}\n        />\n      </FormRow>\n      <FormRow>\n        <Controller\n          control={control}\n          name=\"employerName\"\n          render={({ field, fieldState }) => (\n            <InputSuggest\n              {...field}\n              getOptionsMethod={fakeEmployers}\n              label=\"Наименование работодателя\"\n              error={fieldState.error?.message}\n            />\n          )}\n        />\n      </FormRow>\n      <Row>\n        <Col />\n        <Col>\n          <Button variant=\"primary\">Сохранить</Button>\n        </Col>\n      </Row>\n    </form>\n  )\n}\n\nexport default EmployeeInfoForm\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\n\n// Components\nimport Input from '../Input'\nimport Suggest from '../Suggest'\n\nimport styles from './styles.module.scss'\n\nconst KEY_UP = 38\nconst KEY_DOWN = 40\nconst KEY_ENTER = 13\nconst KEY_ESC = 27\nconst SUGGEST_CLOSING_DELAY = 200\nconst SUGGEST_GET_OPTIONS_DELAY = 200\n\nconst removeBackslash = (value) =>\n  typeof value === 'string' ? value.replace(/\\\\/g, '') : value\n\nclass InputSuggest extends Component {\n  constructor(props) {\n    super(props)\n    this._getOptionsTimeout = null\n\n    this.state = {\n      activeOptionId: null,\n      isGettingOptions: false,\n      isSuggestWrapperVisible: false,\n      options: [],\n    }\n\n    this.handleInputBlur = this.handleInputBlur.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleInputFocus = this.handleInputFocus.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleSuggestChange = this.handleSuggestChange.bind(this)\n    this.handleSuggestItemHover = this.handleSuggestItemHover.bind(this)\n    this.callGetOptions = this.callGetOptions.bind(this)\n    this.getOptions = this.getOptions.bind(this)\n    this.makeNextSuggestOptionActive =\n      this.makeNextSuggestOptionActive.bind(this)\n    this.makePrevSuggestOptionActive =\n      this.makePrevSuggestOptionActive.bind(this)\n    this.scrollToActiveOption = this.scrollToActiveOption.bind(this)\n    this.suggestClose = this.suggestClose.bind(this)\n    this.suggestOpen = this.suggestOpen.bind(this)\n    this.blur = this.blur.bind(this)\n    this.focus = this.focus.bind(this)\n  }\n\n  // Input handlers\n  handleInputBlur(props) {\n    const { onBlur } = this.props\n    setTimeout(() => {\n      this.suggestClose()\n      this.setState({ activeOptionId: null, options: [] })\n      onBlur(props)\n    }, SUGGEST_CLOSING_DELAY)\n  }\n\n  handleInputChange(value) {\n    const valueFormat = removeBackslash(value)\n    const { onChange, minLengthToCallGet } = this.props\n    onChange(valueFormat, this.props)\n    if (valueFormat && valueFormat.length >= minLengthToCallGet) {\n      this.callGetOptions(valueFormat)\n    } else {\n      this.suggestClose()\n      this.setState({ activeOptionId: null, options: [] })\n    }\n  }\n\n  handleInputFocus() {\n    const { value, minLengthToCallGet, onFocus } = this.props\n    if (value && value.length >= minLengthToCallGet) {\n      this.callGetOptions(value)\n    }\n    onFocus(this.props)\n  }\n\n  handleKeyDown(e) {\n    const { isGettingOptions } = this.state\n    if (isGettingOptions) {\n      return false\n    }\n    const { onEnter, value } = this.props\n    const { activeOptionId, isSuggestWrapperVisible, options } = this.state\n\n    switch (e.keyCode) {\n      case KEY_DOWN:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makeNextSuggestOptionActive()\n        }\n        break\n      case KEY_UP:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makePrevSuggestOptionActive()\n        }\n        break\n      case KEY_ENTER:\n        e.preventDefault()\n\n        // Саджест открыт\n        if (isSuggestWrapperVisible) {\n          const activeOption = options.find((o) => o.id === activeOptionId)\n          // И есть выбранная опция\n          if (activeOption) {\n            this.handleSuggestChange(activeOption)\n          } else {\n            onEnter(value, false, this.props)\n          }\n          this.suggestClose()\n        } else {\n          onEnter(value, false, this.props)\n        }\n        this.inputWrapper.querySelector('input').blur()\n\n        break\n      case KEY_ESC:\n        this.handleInputBlur()\n        break\n      default:\n        break\n    }\n    return undefined\n  }\n\n  // Suggest handlers\n  handleSuggestChange({ name, data = {} }) {\n    const nameFormat = removeBackslash(name)\n    const { onChange, onEnter } = this.props\n    onChange(nameFormat, this.props, data)\n    onEnter(nameFormat, true, this.props, data)\n  }\n\n  handleSuggestItemHover({ id }) {\n    this.setState({ activeOptionId: id })\n  }\n\n  /* eslint-disable */\n  // Options methods\n  callGetOptions(value) {\n    if (this._getOptionsTimeout) {\n      clearTimeout(this._getOptionsTimeout)\n    }\n    this._getOptionsTimeout = setTimeout(() => {\n      this.getOptions(value)\n    }, SUGGEST_GET_OPTIONS_DELAY)\n  }\n  /* eslint-enable */\n\n  getOptions(value) {\n    this.setState({ isGettingOptions: true })\n    const { getOptionsMethod, optionsToShow } = this.props\n\n    getOptionsMethod(value, optionsToShow)\n      .then((options) => {\n        let stateProps = {\n          activeOptionId: null,\n          isGettingOptions: false,\n          options,\n        }\n        if (options.length > 0) {\n          this.suggestOpen()\n          // Если список опций в \"саджесте\" НЕ пустой,\n          // то выбираем первую опцию в качестве activeOptionId\n          stateProps = {\n            ...stateProps,\n            activeOptionId: options[0].id,\n          }\n        }\n        this.setState(stateProps, () => {\n          this.scrollToActiveOption()\n        })\n      })\n      .catch(() => {\n        this.setState({\n          activeOptionId: null,\n          isGettingOptions: false,\n          options: [],\n        })\n      })\n  }\n\n  makeNextSuggestOptionActive() {\n    const { options, activeOptionId } = this.state\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex === -1) {\n      activeOptionIndex = 0\n    } else if (activeOptionIndex + 1 < options.length) {\n      activeOptionIndex += 1\n    }\n    this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n      this.scrollToActiveOption()\n    })\n  }\n\n  makePrevSuggestOptionActive() {\n    const { options, activeOptionId } = this.state\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex > 0) {\n      activeOptionIndex -= 1\n      this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n        this.scrollToActiveOption()\n      })\n    }\n  }\n\n  scrollToActiveOption() {\n    const { activeOptionId } = this.state\n    const activeOptionDOM = this.element.querySelector(\n      `#select_box_option_${activeOptionId}`\n    )\n    const suggestListDOM = this.suggest.querySelector('ul')\n\n    if (activeOptionDOM && suggestListDOM) {\n      const activeOptionClientRect = activeOptionDOM.getBoundingClientRect()\n      const suggestListClientRect = suggestListDOM.getBoundingClientRect()\n      const suggestClientRect = this.suggest.getBoundingClientRect()\n\n      // вышли ЗА ВЕРХНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxTop =\n        activeOptionClientRect.top < suggestClientRect.top\n\n      // вышли ЗА НИЖНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxBottom =\n        activeOptionClientRect.top + activeOptionClientRect.height >\n        suggestClientRect.top + suggestClientRect.height\n\n      if (isActiveOptionOutOfTheBoxTop) {\n        // прокручиваем активный элемент К ВЕРХУ контейнера\n        const scrollTop = activeOptionClientRect.top - suggestListClientRect.top\n        this.suggest.scrollTop = scrollTop\n      } else if (isActiveOptionOutOfTheBoxBottom) {\n        // прокручиваем активный элемент К НИЗУ контейнера\n        const scrollTop =\n          activeOptionClientRect.top -\n          suggestListClientRect.top -\n          (suggestClientRect.height - activeOptionClientRect.height)\n        this.suggest.scrollTop = scrollTop\n      }\n    }\n  }\n\n  // Suggest methods\n  suggestClose() {\n    this.setState({\n      activeOptionId: null,\n      isSuggestWrapperVisible: false,\n    })\n  }\n\n  suggestOpen() {\n    this.setState({ isSuggestWrapperVisible: true })\n  }\n\n  // Input methods\n  blur() {\n    this.input.blur()\n  }\n\n  focus() {\n    this.input.focus()\n  }\n\n  render() {\n    const {\n      error,\n      label,\n      minLengthToCallGet,\n      optionsToShow,\n      value,\n      formatOption,\n      getOptionsMethod,\n      onBlur,\n      onChange,\n      onEnter,\n      onFocus,\n      ...inputProps\n    } = this.props\n\n    const { activeOptionId, isSuggestWrapperVisible, options } = this.state\n\n    const componentClass = styles.InputSuggest\n\n    const inputClass = styles.InputSuggest__Input\n\n    const suggestWrapperClass = cn(styles.InputSuggest__SuggestWrapper, {\n      [styles.InputSuggest__SuggestWrapper_visible]:\n        isSuggestWrapperVisible && options.length > 0,\n    })\n\n    const suggestClass = styles.InputSuggest__Suggest\n\n    return (\n      <div\n        ref={(el) => {\n          this.element = el\n          return this.element\n        }}\n        className={componentClass}\n      >\n        <div\n          className={inputClass}\n          ref={(el) => {\n            this.inputWrapper = el\n            return this.inputWrapper\n          }}\n        >\n          <Input\n            error={error}\n            label={label}\n            ref={(el) => {\n              this.input = el\n              return this.input\n            }}\n            value={value}\n            onBlur={this.handleInputBlur}\n            onChange={this.handleInputChange}\n            onFocus={this.handleInputFocus}\n            onKeyDown={this.handleKeyDown}\n            {...inputProps}\n          />\n        </div>\n        <div className={suggestWrapperClass}>\n          <div\n            className={suggestClass}\n            ref={(el) => {\n              this.suggest = el\n              return this.suggest\n            }}\n          >\n            <Suggest\n              activeOptionId={activeOptionId}\n              optionSearchMask={value}\n              options={options}\n              value={value}\n              formatOption={formatOption}\n              onChange={this.handleSuggestChange}\n              onItemHover={this.handleSuggestItemHover}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nInputSuggest.propTypes = {\n  error: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  minLengthToCallGet: PropTypes.number,\n  optionsToShow: PropTypes.number,\n  value: PropTypes.string,\n\n  formatOption: PropTypes.func,\n  getOptionsMethod: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onEnter: PropTypes.func,\n  onFocus: PropTypes.func,\n}\n\nInputSuggest.defaultProps = {\n  error: null,\n  label: null,\n  minLengthToCallGet: 2,\n  optionsToShow: 5,\n  value: null,\n\n  formatOption: (name, option) => name,\n  getOptionsMethod: (query, count) => Promise.resolve([]),\n  onBlur: (props) => {},\n  onChange: (name, props, data) => {},\n  onEnter: (value, fromSuggest, props, data) => {},\n  onFocus: (props) => {},\n}\n\nexport default InputSuggest\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputSuggest\":\"styles_InputSuggest__2A8yc\",\"InputSuggest__Input\":\"styles_InputSuggest__Input__3M6I2\",\"InputSuggest__SuggestWrapper\":\"styles_InputSuggest__SuggestWrapper__2oTlG\",\"InputSuggest__SuggestWrapper_closing\":\"styles_InputSuggest__SuggestWrapper_closing__2dtNH\",\"InputSuggest__SuggestWrapper_opening\":\"styles_InputSuggest__SuggestWrapper_opening__1rdBj\",\"InputSuggest__SuggestWrapper_visible\":\"styles_InputSuggest__SuggestWrapper_visible__7InKm\",\"InputSuggest__Suggest\":\"styles_InputSuggest__Suggest__23iYc\"};","export const formatNumber = (value) => {\n  return String(value).replace(/\\D/g, '')\n}\n","export const PHONE_REGEXP = /^7[\\d]{10}$/\n","import { PHONE_REGEXP } from '../constants/regexps'\n\nexport const validatePhone = (value) => PHONE_REGEXP.test(value)\n","import Col from './Col'\nimport Row from './Row'\n\nexport { Col, Row }\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputDate\":\"styles_InputDate__3Gfzb\",\"InputDate__Icon\":\"styles_InputDate__Icon__3m_hb\"};","function IconCalendar(props) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather feather-calendar\"\n    >\n      <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" {...props}></rect>\n      <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"></line>\n      <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"></line>\n      <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"></line>\n    </svg>\n  )\n}\n\nexport default IconCalendar\n","import PropTypes from 'prop-types'\n\n// Components\nimport Input from '../Input'\n\n// Icons\nimport IconCalendar from '../../icons/IconCalendar'\n\nimport styles from './styles.module.scss'\n\nfunction InputDate(props) {\n  return (\n    <div className={styles.InputDate}>\n      <Input {...props} mask=\"99.99.9999\" />\n      <div className={styles.InputDate__Icon}>\n        <IconCalendar />\n      </div>\n    </div>\n  )\n}\n\nInputDate.propTypes = {\n  error: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n}\nInputDate.defaultProps = {\n  error: null,\n  mask: null,\n  value: null,\n  onBlur: (props) => {},\n  onChange: (name, props, data) => {},\n  onFocus: (props) => {},\n}\n\nexport default InputDate\n"],"sourceRoot":""}