{"version":3,"sources":["components/Suggest/option.module.scss","components/Suggest/suggest.module.scss","components/InputSuggest/styles.module.scss","components/SelectBox/styles.module.scss","components/Input/index.jsx","components/Button/index.jsx","components/FormRow/index.jsx","components/H/index.jsx","constants/errors.js","components/Button/styles.module.scss","components/FormRow/styles.module.scss","components/H/styles.module.scss","components/Input/styles.module.scss","components/Grid/styles.module.scss","components/InputSuggest/index.jsx","components/Grid/Col.jsx","components/Grid/Row.jsx","components/Suggest/option.jsx","components/Suggest/suggest.jsx","components/Suggest/index.js","icons/IconCode.jsx","components/SelectBox/index.jsx"],"names":["module","exports","Input","forwardRef","props","ref","error","label","mask","value","onBlur","onChange","onFocus","otherProps","useState","hasFocus","setHasFocus","inputClass","cn","styles","Input__Input","Input__Input_error","labelTextClass","Input__LabelText","Input__LabelText_top","inputProps","className","e","target","Input__Label","Input__Error","defaultProps","name","data","Button","children","variant","FormRow","H","size","ERROR_MESSAGE_INVALID_EMAIL","REQUIRED_MESSAGE","removeBackslash","replace","InputSuggest","_getOptionsTimeout","state","activeOptionId","isGettingOptions","isSuggestWrapperVisible","options","handleInputBlur","bind","handleInputChange","handleInputFocus","handleKeyDown","handleSuggestChange","handleSuggestItemHover","callGetOptions","getOptions","makeNextSuggestOptionActive","makePrevSuggestOptionActive","scrollToActiveOption","suggestClose","suggestOpen","blur","focus","this","setTimeout","setState","valueFormat","minLengthToCallGet","length","onEnter","keyCode","preventDefault","activeOption","find","o","id","inputWrapper","querySelector","nameFormat","clearTimeout","getOptionsMethod","optionsToShow","then","stateProps","catch","activeOptionIndex","findIndex","activeOptionDOM","element","suggestListDOM","suggest","activeOptionClientRect","getBoundingClientRect","suggestListClientRect","suggestClientRect","isActiveOptionOutOfTheBoxTop","top","isActiveOptionOutOfTheBoxBottom","height","scrollTop","input","formatOption","componentClass","InputSuggest__Input","suggestWrapperClass","InputSuggest__SuggestWrapper","InputSuggest__SuggestWrapper_visible","suggestClass","InputSuggest__Suggest","el","onKeyDown","optionSearchMask","onItemHover","Component","option","query","count","Promise","resolve","fromSuggest","Col","Row","Option","isActive","isValue","onClick","onMouseOver","Option_active","Option_value","Suggest","handleOptionClick","handleMouseOver","optionSearchMaskPrepared","trim","Suggest__Options","map","nameWithHighlights","regexp","RegExp","match","Array","isArray","nameParts","split","matchIndex","forEach","part","push","Suggest__Option","IconCode","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","getStateData","inputPlaceholder","inputValue","getFilteredOptions","inputValuePrepared","filter","test","SelectBox","isSuggestWrapperClosing","isSuggestWrapperOpening","handleIconClick","prevProps","isEqual","inputValueFormat","filteredOptions","newState","undefined","optionsProps","calledFromsuggestOpenMethod","notFoundText","iconClass","SelectBox__Icon","SelectBox__Icon_suggest_visible","SelectBox__Input","SelectBox__SuggestWrapper","SelectBox__SuggestWrapper_closing","SelectBox__SuggestWrapper_opening","SelectBox__SuggestWrapper_visible","SelectBox__Suggest","notFound","SelectBox__NotFound","placeholder"],"mappings":"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","file":"static/js/1.e16740dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Option\":\"option_Option__3hi2U\",\"Option_active\":\"option_Option_active__1-Hnb\",\"Option_value\":\"option_Option_value__1F3n1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Suggest__Options\":\"suggest_Suggest__Options__3X_hr\",\"Suggest__Option\":\"suggest_Suggest__Option__1Dcnd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputSuggest\":\"styles_InputSuggest__2A8yc\",\"InputSuggest__Input\":\"styles_InputSuggest__Input__3M6I2\",\"InputSuggest__SuggestWrapper\":\"styles_InputSuggest__SuggestWrapper__2oTlG\",\"InputSuggest__SuggestWrapper_closing\":\"styles_InputSuggest__SuggestWrapper_closing__2dtNH\",\"InputSuggest__SuggestWrapper_opening\":\"styles_InputSuggest__SuggestWrapper_opening__1rdBj\",\"InputSuggest__SuggestWrapper_visible\":\"styles_InputSuggest__SuggestWrapper_visible__7InKm\",\"InputSuggest__Suggest\":\"styles_InputSuggest__Suggest__23iYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectBox\":\"styles_SelectBox__LuOVi\",\"SelectBox__Icon\":\"styles_SelectBox__Icon__lA4Ro\",\"SelectBox__Input\":\"styles_SelectBox__Input__1FBQJ\",\"SelectBox__SuggestWrapper\":\"styles_SelectBox__SuggestWrapper__bEbpj\",\"SelectBox__SuggestWrapper_closing\":\"styles_SelectBox__SuggestWrapper_closing__35bL_\",\"SelectBox__SuggestWrapper_opening\":\"styles_SelectBox__SuggestWrapper_opening__2fO9S\",\"SelectBox__SuggestWrapper_visible\":\"styles_SelectBox__SuggestWrapper_visible__1ghg9\",\"SelectBox__Suggest\":\"styles_SelectBox__Suggest__2xZYZ\",\"SelectBox__NotFound\":\"styles_SelectBox__NotFound__3wWgH\"};","import { useState, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport InputMask from 'react-input-mask'\nimport cn from 'classnames'\n\nimport styles from './styles.module.scss'\n\n// eslint-disable-next-line react/display-name\nconst Input = forwardRef((props, ref) => {\n  const {\n    error,\n    label,\n    mask,\n    value,\n    onBlur,\n    onChange,\n    onFocus,\n    ...otherProps\n  } = props\n\n  const [hasFocus, setHasFocus] = useState(false)\n\n  // Handlers\n  function handleBlur(...args) {\n    setHasFocus(false)\n    if (typeof onBlur === 'function') {\n      onBlur(...args)\n    }\n  }\n  function handleChange(e) {\n    onChange(e.target.value, props)\n  }\n  function handleFocus(...args) {\n    setHasFocus(true)\n    if (typeof onFocus === 'function') {\n      onFocus(...args)\n    }\n  }\n\n  const inputClass = cn(styles.Input__Input, {\n    [styles.Input__Input_error]: !!error,\n  })\n\n  const labelTextClass = cn(styles.Input__LabelText, {\n    [styles.Input__LabelText_top]: !!value || hasFocus,\n  })\n\n  const inputProps = {\n    ...otherProps,\n    className: inputClass,\n    ref,\n    value: value || '',\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus,\n  }\n\n  return (\n    <div className={styles.Input}>\n      <label className={styles.Input__Label}>\n        <span className={labelTextClass}>{label}</span>\n        {!mask && <input {...inputProps} />}\n        {!!mask && <InputMask {...inputProps} mask={mask} />}\n      </label>\n      {!!error && <div className={styles.Input__Error}>{error}</div>}\n    </div>\n  )\n})\n\nInput.propTypes = {\n  error: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  mask: PropTypes.string,\n  value: PropTypes.string,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n}\nInput.defaultProps = {\n  error: null,\n  mask: null,\n  value: null,\n  onBlur: (props) => {},\n  onChange: (name, props, data) => {},\n  onFocus: (props) => {},\n}\n\nexport default Input\n","import PropTypes from 'prop-types'\nimport cn from 'classnames'\n\nimport styles from './styles.module.scss'\n\nfunction Button(props) {\n  const { children, variant, ...otherProps } = props\n\n  const className = cn(styles.Button, styles[`Button_variant_${variant}`])\n\n  return (\n    <button {...otherProps} className={className}>\n      {children}\n    </button>\n  )\n}\n\nButton.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n  variant: PropTypes.oneOf(['default', 'primary']),\n}\nButton.defaultProps = {\n  variant: 'default',\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\n\nimport styles from './styles.module.scss'\n\nfunction FormRow(props) {\n  const { children } = props\n\n  return <div className={styles.FormRow}>{children}</div>\n}\n\nFormRow.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n}\nFormRow.defaultProps = {\n  children: null,\n}\n\nexport default FormRow\n","import PropTypes from 'prop-types'\nimport cn from 'classnames'\n\nimport styles from './styles.module.scss'\n\nfunction H(props) {\n  const { children, size, ...otherProps } = props\n\n  const className = cn(styles.H, styles[`H_size_${size}`])\n\n  if (size === 1 || size === '1') {\n    return (\n      <h1 {...otherProps} className={className}>\n        {children}\n      </h1>\n    )\n  }\n  if (size === 2 || size === '2') {\n    return (\n      <h2 {...otherProps} className={className}>\n        {children}\n      </h2>\n    )\n  }\n  if (size === 3 || size === '3') {\n    return (\n      <h3 {...otherProps} className={className}>\n        {children}\n      </h3>\n    )\n  }\n\n  return null\n}\n\nH.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n  size: PropTypes.oneOf([1, '1', 2, '2', 3, '3']).isRequired,\n}\n\nexport default H\n","export const ERROR_MESSAGE_INVALID_EMAIL =\n  'Введите e-mail в формате example@example.com'\nexport const REQUIRED_MESSAGE = 'Обязательное поле'\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"styles_Button__1Ekk8\",\"Button_variant_default\":\"styles_Button_variant_default__3GtCQ\",\"Button_variant_primary\":\"styles_Button_variant_primary__G0dsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormRow\":\"styles_FormRow__1xnvt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"H\":\"styles_H__10j-W\",\"H_size_1\":\"styles_H_size_1__DLwdi\",\"H_size_2\":\"styles_H_size_2__2d1Lt\",\"H_size_3\":\"styles_H_size_3__2RHfa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"styles_Input__18MvC\",\"Input__Label\":\"styles_Input__Label__3eMsY\",\"Input__LabelText\":\"styles_Input__LabelText__1pkll\",\"Input__LabelText_top\":\"styles_Input__LabelText_top__3UohT\",\"Input__Input\":\"styles_Input__Input__25z1j\",\"Input__Input_error\":\"styles_Input__Input_error__161xf\",\"Input__Error\":\"styles_Input__Error__2huak\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"styles_Row__3p-fl\",\"Col\":\"styles_Col__2F8Kj\"};","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\n\n// Components\nimport Input from '../Input'\nimport Suggest from '../Suggest'\n\nimport styles from './styles.module.scss'\n\nconst KEY_UP = 38\nconst KEY_DOWN = 40\nconst KEY_ENTER = 13\nconst KEY_ESC = 27\nconst SUGGEST_CLOSING_DELAY = 200\nconst SUGGEST_GET_OPTIONS_DELAY = 200\n\nconst removeBackslash = (value) =>\n  typeof value === 'string' ? value.replace(/\\\\/g, '') : value\n\nclass InputSuggest extends Component {\n  constructor(props) {\n    super(props)\n    this._getOptionsTimeout = null\n\n    this.state = {\n      activeOptionId: null,\n      isGettingOptions: false,\n      isSuggestWrapperVisible: false,\n      options: [],\n    }\n\n    this.handleInputBlur = this.handleInputBlur.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleInputFocus = this.handleInputFocus.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleSuggestChange = this.handleSuggestChange.bind(this)\n    this.handleSuggestItemHover = this.handleSuggestItemHover.bind(this)\n    this.callGetOptions = this.callGetOptions.bind(this)\n    this.getOptions = this.getOptions.bind(this)\n    this.makeNextSuggestOptionActive =\n      this.makeNextSuggestOptionActive.bind(this)\n    this.makePrevSuggestOptionActive =\n      this.makePrevSuggestOptionActive.bind(this)\n    this.scrollToActiveOption = this.scrollToActiveOption.bind(this)\n    this.suggestClose = this.suggestClose.bind(this)\n    this.suggestOpen = this.suggestOpen.bind(this)\n    this.blur = this.blur.bind(this)\n    this.focus = this.focus.bind(this)\n  }\n\n  // Input handlers\n  handleInputBlur(props) {\n    const { onBlur } = this.props\n    setTimeout(() => {\n      this.suggestClose()\n      this.setState({ activeOptionId: null, options: [] })\n      onBlur(props)\n    }, SUGGEST_CLOSING_DELAY)\n  }\n\n  handleInputChange(value) {\n    const valueFormat = removeBackslash(value)\n    const { onChange, minLengthToCallGet } = this.props\n    onChange(valueFormat, this.props)\n    if (valueFormat && valueFormat.length >= minLengthToCallGet) {\n      this.callGetOptions(valueFormat)\n    } else {\n      this.suggestClose()\n      this.setState({ activeOptionId: null, options: [] })\n    }\n  }\n\n  handleInputFocus() {\n    const { value, minLengthToCallGet, onFocus } = this.props\n    if (value && value.length >= minLengthToCallGet) {\n      this.callGetOptions(value)\n    }\n    onFocus(this.props)\n  }\n\n  handleKeyDown(e) {\n    const { isGettingOptions } = this.state\n    if (isGettingOptions) {\n      return false\n    }\n    const { onEnter, value } = this.props\n    const { activeOptionId, isSuggestWrapperVisible, options } = this.state\n\n    switch (e.keyCode) {\n      case KEY_DOWN:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makeNextSuggestOptionActive()\n        }\n        break\n      case KEY_UP:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makePrevSuggestOptionActive()\n        }\n        break\n      case KEY_ENTER:\n        e.preventDefault()\n\n        // Саджест открыт\n        if (isSuggestWrapperVisible) {\n          const activeOption = options.find((o) => o.id === activeOptionId)\n          // И есть выбранная опция\n          if (activeOption) {\n            this.handleSuggestChange(activeOption)\n          } else {\n            onEnter(value, false, this.props)\n          }\n          this.suggestClose()\n        } else {\n          onEnter(value, false, this.props)\n        }\n        this.inputWrapper.querySelector('input').blur()\n\n        break\n      case KEY_ESC:\n        this.handleInputBlur()\n        break\n      default:\n        break\n    }\n    return undefined\n  }\n\n  // Suggest handlers\n  handleSuggestChange({ name, data = {} }) {\n    const nameFormat = removeBackslash(name)\n    const { onChange, onEnter } = this.props\n    onChange(nameFormat, this.props, data)\n    onEnter(nameFormat, true, this.props, data)\n  }\n\n  handleSuggestItemHover({ id }) {\n    this.setState({ activeOptionId: id })\n  }\n\n  /* eslint-disable */\n  // Options methods\n  callGetOptions(value) {\n    if (this._getOptionsTimeout) {\n      clearTimeout(this._getOptionsTimeout)\n    }\n    this._getOptionsTimeout = setTimeout(() => {\n      this.getOptions(value)\n    }, SUGGEST_GET_OPTIONS_DELAY)\n  }\n  /* eslint-enable */\n\n  getOptions(value) {\n    this.setState({ isGettingOptions: true })\n    const { getOptionsMethod, optionsToShow } = this.props\n\n    getOptionsMethod(value, optionsToShow)\n      .then((options) => {\n        let stateProps = {\n          activeOptionId: null,\n          isGettingOptions: false,\n          options,\n        }\n        if (options.length > 0) {\n          this.suggestOpen()\n          // Если список опций в \"саджесте\" НЕ пустой,\n          // то выбираем первую опцию в качестве activeOptionId\n          stateProps = {\n            ...stateProps,\n            activeOptionId: options[0].id,\n          }\n        }\n        this.setState(stateProps, () => {\n          this.scrollToActiveOption()\n        })\n      })\n      .catch(() => {\n        this.setState({\n          activeOptionId: null,\n          isGettingOptions: false,\n          options: [],\n        })\n      })\n  }\n\n  makeNextSuggestOptionActive() {\n    const { options, activeOptionId } = this.state\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex === -1) {\n      activeOptionIndex = 0\n    } else if (activeOptionIndex + 1 < options.length) {\n      activeOptionIndex += 1\n    }\n    this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n      this.scrollToActiveOption()\n    })\n  }\n\n  makePrevSuggestOptionActive() {\n    const { options, activeOptionId } = this.state\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex > 0) {\n      activeOptionIndex -= 1\n      this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n        this.scrollToActiveOption()\n      })\n    }\n  }\n\n  scrollToActiveOption() {\n    const { activeOptionId } = this.state\n    const activeOptionDOM = this.element.querySelector(\n      `#select_box_option_${activeOptionId}`\n    )\n    const suggestListDOM = this.suggest.querySelector('ul')\n\n    if (activeOptionDOM && suggestListDOM) {\n      const activeOptionClientRect = activeOptionDOM.getBoundingClientRect()\n      const suggestListClientRect = suggestListDOM.getBoundingClientRect()\n      const suggestClientRect = this.suggest.getBoundingClientRect()\n\n      // вышли ЗА ВЕРХНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxTop =\n        activeOptionClientRect.top < suggestClientRect.top\n\n      // вышли ЗА НИЖНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxBottom =\n        activeOptionClientRect.top + activeOptionClientRect.height >\n        suggestClientRect.top + suggestClientRect.height\n\n      if (isActiveOptionOutOfTheBoxTop) {\n        // прокручиваем активный элемент К ВЕРХУ контейнера\n        const scrollTop = activeOptionClientRect.top - suggestListClientRect.top\n        this.suggest.scrollTop = scrollTop\n      } else if (isActiveOptionOutOfTheBoxBottom) {\n        // прокручиваем активный элемент К НИЗУ контейнера\n        const scrollTop =\n          activeOptionClientRect.top -\n          suggestListClientRect.top -\n          (suggestClientRect.height - activeOptionClientRect.height)\n        this.suggest.scrollTop = scrollTop\n      }\n    }\n  }\n\n  // Suggest methods\n  suggestClose() {\n    this.setState({\n      activeOptionId: null,\n      isSuggestWrapperVisible: false,\n    })\n  }\n\n  suggestOpen() {\n    this.setState({ isSuggestWrapperVisible: true })\n  }\n\n  // Input methods\n  blur() {\n    this.input.blur()\n  }\n\n  focus() {\n    this.input.focus()\n  }\n\n  render() {\n    const {\n      error,\n      label,\n      minLengthToCallGet,\n      optionsToShow,\n      value,\n      formatOption,\n      getOptionsMethod,\n      onBlur,\n      onChange,\n      onEnter,\n      onFocus,\n      ...inputProps\n    } = this.props\n\n    const { activeOptionId, isSuggestWrapperVisible, options } = this.state\n\n    const componentClass = styles.InputSuggest\n\n    const inputClass = styles.InputSuggest__Input\n\n    const suggestWrapperClass = cn(styles.InputSuggest__SuggestWrapper, {\n      [styles.InputSuggest__SuggestWrapper_visible]:\n        isSuggestWrapperVisible && options.length > 0,\n    })\n\n    const suggestClass = styles.InputSuggest__Suggest\n\n    return (\n      <div\n        ref={(el) => {\n          this.element = el\n          return this.element\n        }}\n        className={componentClass}\n      >\n        <div\n          className={inputClass}\n          ref={(el) => {\n            this.inputWrapper = el\n            return this.inputWrapper\n          }}\n        >\n          <Input\n            error={error}\n            label={label}\n            ref={(el) => {\n              this.input = el\n              return this.input\n            }}\n            value={value}\n            onBlur={this.handleInputBlur}\n            onChange={this.handleInputChange}\n            onFocus={this.handleInputFocus}\n            onKeyDown={this.handleKeyDown}\n            {...inputProps}\n          />\n        </div>\n        <div className={suggestWrapperClass}>\n          <div\n            className={suggestClass}\n            ref={(el) => {\n              this.suggest = el\n              return this.suggest\n            }}\n          >\n            <Suggest\n              activeOptionId={activeOptionId}\n              optionSearchMask={value}\n              options={options}\n              value={value}\n              formatOption={formatOption}\n              onChange={this.handleSuggestChange}\n              onItemHover={this.handleSuggestItemHover}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nInputSuggest.propTypes = {\n  error: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  minLengthToCallGet: PropTypes.number,\n  optionsToShow: PropTypes.number,\n  value: PropTypes.string,\n\n  formatOption: PropTypes.func,\n  getOptionsMethod: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onEnter: PropTypes.func,\n  onFocus: PropTypes.func,\n}\n\nInputSuggest.defaultProps = {\n  error: null,\n  label: null,\n  minLengthToCallGet: 2,\n  optionsToShow: 5,\n  value: null,\n\n  formatOption: (name, option) => name,\n  getOptionsMethod: (query, count) => Promise.resolve([]),\n  onBlur: (props) => {},\n  onChange: (name, props, data) => {},\n  onEnter: (value, fromSuggest, props, data) => {},\n  onFocus: (props) => {},\n}\n\nexport default InputSuggest\n","import PropTypes from 'prop-types'\n\nimport styles from './styles.module.scss'\n\nfunction Col(props) {\n  const { children } = props\n\n  return <div className={styles.Col}>{children}</div>\n}\n\nCol.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n}\nCol.defaultProps = {\n  children: null,\n}\n\nexport default Col\n","import PropTypes from 'prop-types'\n\nimport styles from './styles.module.scss'\n\nfunction Row(props) {\n  const { children } = props\n\n  return <div className={styles.Row}>{children}</div>\n}\n\nRow.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n}\nRow.defaultProps = {\n  children: null,\n}\n\nexport default Row\n","import PropTypes from 'prop-types'\nimport cn from 'classnames'\n\nimport styles from './option.module.scss'\n\nfunction Option(props) {\n  const { children, id, isActive, isValue, onClick, onMouseOver } = props\n\n  // Handlers\n  function handleClick(e) {\n    e.preventDefault()\n    onClick(id)\n  }\n  function handleMouseOver() {\n    onMouseOver(id)\n  }\n\n  const componentClass = cn(styles.Option, {\n    [styles.Option_active]: isActive,\n    [styles.Option_value]: isValue,\n  })\n\n  return (\n    <div\n      className={componentClass}\n      id={`select_box_option_${id}`}\n      onClick={handleClick}\n      onMouseOver={handleMouseOver}\n    >\n      {children}\n    </div>\n  )\n}\n\nOption.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  isActive: PropTypes.bool,\n  isValue: PropTypes.bool,\n  onClick: PropTypes.func,\n  onMouseOver: PropTypes.func,\n}\nOption.defaultProps = {\n  children: null,\n  id: null,\n  isActive: false,\n  isValue: false,\n  onClick: (id) => {},\n  onMouseOver: (id) => {},\n}\n\nexport default Option\n","import PropTypes from 'prop-types'\n\n// Components\nimport Option from './option'\n\nimport styles from './suggest.module.scss'\n\nfunction Suggest(props) {\n  const {\n    activeOptionId,\n    optionSearchMask,\n    options,\n    value,\n    formatOption,\n    onChange,\n    onItemHover,\n  } = props\n\n  // Handlers\n  function handleOptionClick(id) {\n    onChange(options.find((o) => o.id === id))\n  }\n\n  function handleMouseOver(id) {\n    onItemHover(options.find((o) => o.id === id))\n  }\n\n  const optionSearchMaskPrepared = optionSearchMask\n    ? optionSearchMask\n        .trim()\n        .replace(\n          /(\\*|\\.|\\+|\\{|\\}|\\(|\\)|\\$|\\?|\\^|\\[|\\]|;|:|,|\\/|-|_|=)/g,\n          '\\\\$1'\n        )\n    : null\n\n  return (\n    <div className={styles.Suggest}>\n      <ul className={styles.Suggest__Options}>\n        {options.map((option) => {\n          const { id, name = '' } = option\n\n          let nameWithHighlights = [name]\n          if (optionSearchMaskPrepared) {\n            const regexp = new RegExp(optionSearchMaskPrepared, 'ig')\n            const match = name.match(regexp)\n\n            if (Array.isArray(match)) {\n              const nameParts = name.split(regexp)\n              nameWithHighlights = []\n\n              let matchIndex = 0\n              nameParts.forEach((part) => {\n                nameWithHighlights.push(part)\n                if (matchIndex < match.length) {\n                  nameWithHighlights.push(\n                    <i key={matchIndex}>{match[matchIndex]}</i>\n                  )\n                  matchIndex += 1\n                }\n              })\n            }\n          }\n\n          return (\n            <li key={id} className={styles.Suggest__Option}>\n              <Option\n                id={id}\n                isActive={id === activeOptionId}\n                isValue={id === value}\n                onClick={handleOptionClick}\n                onMouseOver={handleMouseOver}\n              >\n                {formatOption(nameWithHighlights, option)}\n              </Option>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nSuggest.propTypes = {\n  activeOptionId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  optionSearchMask: PropTypes.string,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.shape({}),\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      name: PropTypes.string,\n    })\n  ),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  formatOption: PropTypes.func,\n  onChange: PropTypes.func,\n  onItemHover: PropTypes.func,\n}\nSuggest.defaultProps = {\n  activeOptionId: null,\n  optionSearchMask: '',\n  options: [],\n  value: null,\n  formatOption: (name, option) => name,\n  onChange: (option) => {},\n  onItemHover: (option) => {},\n}\n\nexport default Suggest\n","import Suggest from './suggest'\nexport default Suggest\n","function IconCode() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"feather feather-code\"\n    >\n      <polyline points=\"16 18 22 12 16 6\"></polyline>\n      <polyline points=\"8 6 2 12 8 18\"></polyline>\n    </svg>\n  )\n}\n\nexport default IconCode\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\nimport isEqual from 'lodash.isequal'\n\n// Components\nimport Input from '../Input'\nimport Suggest from '../Suggest'\n\n// Icons\nimport IconCode from '../../icons/IconCode'\n\nimport styles from './styles.module.scss'\n\nconst removeBackslash = (value) =>\n  typeof value === 'string' ? value.replace(/\\\\/g, '') : value\n\nconst getStateData = ({ options, value }) => {\n  const activeOption = options.find((o) => o.id === value)\n  const activeOptionId = activeOption ? activeOption.id : null\n  const inputPlaceholder = activeOption ? activeOption.name : ''\n  const inputValue = removeBackslash(inputPlaceholder)\n  return { activeOptionId, inputPlaceholder, inputValue }\n}\n\nconst getFilteredOptions = (options, inputValue = '') => {\n  const inputValuePrepared = inputValue\n    .trim()\n    .replace(/(\\*|\\.|\\+|\\{|\\}|\\(|\\)|\\$|\\?|\\^)/g, '\\\\$1')\n  if (inputValuePrepared) {\n    return options.filter((o) =>\n      new RegExp(inputValuePrepared, 'ig').test(o.name)\n    )\n  }\n  return options\n}\n\nconst SUGGEST_CLOSING_DELAY = 200\nconst SUGGEST_OPENING_DELAY = 200\nconst KEY_UP = 38\nconst KEY_DOWN = 40\nconst KEY_ENTER = 13\n\nclass SelectBox extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeOptionId: null,\n      inputValue: '',\n      inputPlaceholder: '',\n      // these props need to make a special className modifiers for 200ms opening/closing delay\n      isSuggestWrapperClosing: false,\n      isSuggestWrapperOpening: false,\n      isSuggestWrapperVisible: false,\n    }\n\n    this.handleIconClick = this.handleIconClick.bind(this)\n    this.handleInputBlur = this.handleInputBlur.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleInputFocus = this.handleInputFocus.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleSuggestChange = this.handleSuggestChange.bind(this)\n    this.handleSuggestItemHover = this.handleSuggestItemHover.bind(this)\n    this.suggestClose = this.suggestClose.bind(this)\n    this.suggestOpen = this.suggestOpen.bind(this)\n    this.makeNextSuggestOptionActive =\n      this.makeNextSuggestOptionActive.bind(this)\n    this.makePrevSuggestOptionActive =\n      this.makePrevSuggestOptionActive.bind(this)\n    this.scrollToActiveOption = this.scrollToActiveOption.bind(this)\n  }\n\n  // Life Cycle\n  componentDidMount() {\n    const { isSuggestWrapperVisible = false } = this.props\n    const { activeOptionId, inputPlaceholder, inputValue } = getStateData(\n      this.props\n    )\n    this.setState({\n      activeOptionId,\n      inputPlaceholder,\n      inputValue,\n      isSuggestWrapperVisible,\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    // Изменился value или options извне\n    const { value, options, isSuggestWrapperVisible } = this.props\n    if (prevProps.value !== value || !isEqual(prevProps.options, options)) {\n      const { activeOptionId, inputPlaceholder, inputValue } = getStateData(\n        this.props\n      )\n      this.setState({ activeOptionId, inputPlaceholder, inputValue })\n    }\n\n    // Изменилась видимость саджеста извне\n    if (prevProps.isSuggestWrapperVisible !== isSuggestWrapperVisible) {\n      this.setState({ isSuggestWrapperVisible }) // eslint-disable-line\n    }\n  }\n\n  // Icon handlers\n  handleIconClick(e) {\n    e.preventDefault()\n    const { isSuggestWrapperVisible } = this.state\n    if (!isSuggestWrapperVisible) {\n      this.inputWrapper.querySelector('input').focus()\n    }\n  }\n\n  // Input handlers\n  handleInputBlur() {\n    this.setState({ isSuggestWrapperClosing: true })\n\n    // timeout нужен, чтобы успеть обработать клик по option ДО ТОГО,\n    // как он скроется из-за события input onblur\n    setTimeout(() => {\n      this.suggestClose()\n      const { value } = this.props\n      const { activeOptionId, inputPlaceholder } = this.state\n      this.setState({\n        activeOptionId: value || activeOptionId,\n        inputValue: removeBackslash(inputPlaceholder),\n        isSuggestWrapperClosing: false,\n      })\n    }, SUGGEST_CLOSING_DELAY)\n  }\n\n  handleInputChange(inputValue) {\n    const inputValueFormat = removeBackslash(inputValue)\n    this.setState({ inputValue: inputValueFormat }, () => {\n      const { value, options } = this.props\n\n      const filteredOptions = getFilteredOptions(options, inputValueFormat)\n      if (filteredOptions.length === 0) {\n        return false\n      }\n\n      if (value) {\n        const isFilteredOptionsContainValue = !!filteredOptions.find(\n          (o) => o.id === value\n        )\n        if (isFilteredOptionsContainValue) {\n          // Выделяем выбранную опцию\n          this.setState({\n            activeOptionId: value,\n          })\n        } else {\n          // Выделяем первую опцию, если значения контрола (value)\n          // НЕТ в списке отсортированных опций (filteredOptions)\n          this.setState({\n            activeOptionId: filteredOptions[0].id,\n          })\n        }\n      } else {\n        // Выделяем первую опцию, если ничего не выбрано\n        this.setState({\n          activeOptionId: filteredOptions[0].id,\n        })\n      }\n      return undefined\n    })\n  }\n\n  handleInputFocus() {\n    this.setState({ inputValue: '', isSuggestWrapperOpening: true })\n    this.suggestOpen()\n\n    // timeout нужен для того, чтобы задать контролу класс opening на некоторое время (200ms)\n    setTimeout(() => {\n      this.setState({ isSuggestWrapperOpening: false })\n    }, SUGGEST_OPENING_DELAY)\n  }\n\n  handleKeyDown(e) {\n    const { isSuggestWrapperVisible, activeOptionId } = this.state\n    const { options: optionsProps } = this.props\n    const option = optionsProps.find((o) => o.id === activeOptionId)\n    switch (e.keyCode) {\n      case KEY_DOWN:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makeNextSuggestOptionActive()\n        } else {\n          this.suggestOpen()\n        }\n        break\n      case KEY_UP:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makePrevSuggestOptionActive()\n        } else {\n          this.suggestOpen()\n        }\n        break\n      case KEY_ENTER:\n        if (option) {\n          this.handleSuggestChange({ id: activeOptionId })\n          this.suggestClose()\n          this.inputWrapper.querySelector('input').blur()\n        }\n        break\n      default:\n        break\n    }\n  }\n\n  // Suggest handlers\n  handleSuggestChange({ id }) {\n    const { onChange } = this.props\n    onChange(id, this.props)\n  }\n\n  handleSuggestItemHover({ id }) {\n    this.setState({ activeOptionId: id })\n  }\n\n  // Methods\n  suggestClose() {\n    this.setState({ isSuggestWrapperVisible: false })\n  }\n\n  suggestOpen() {\n    const { options, value } = this.props\n    const { inputValue } = this.state\n\n    const filteredOptions = getFilteredOptions(options, inputValue)\n\n    let newState = { isSuggestWrapperVisible: true }\n    const isValueEmpty = value === undefined || value === null || value === ''\n\n    if (isValueEmpty) {\n      // Выделяем первую опцию, если ничего не выбрано\n      if (filteredOptions.length > 0) {\n        newState = {\n          ...newState,\n          activeOptionId: filteredOptions[0] ? filteredOptions[0].id : null,\n        }\n      }\n    } else {\n      const isFilteredOptionsContainValue = !!filteredOptions.find(\n        (o) => o.id === value\n      )\n      // Выделяем первую опцию, если значения контрола (value)\n      // НЕТ в списке отсортированных опций (filteredOptions)\n      if (!isFilteredOptionsContainValue) {\n        newState = {\n          ...newState,\n          activeOptionId: filteredOptions[0] ? filteredOptions[0].id : null,\n        }\n      }\n    }\n\n    this.setState(newState, () => {\n      this.scrollToActiveOption(true)\n    })\n  }\n\n  makeNextSuggestOptionActive() {\n    const { inputValue, activeOptionId } = this.state\n    const { options: optionsProps } = this.props\n    const options = getFilteredOptions(optionsProps, inputValue)\n    if (options.length === 0) {\n      return\n    }\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex === -1) {\n      activeOptionIndex = 0\n    } else if (activeOptionIndex + 1 < options.length) {\n      activeOptionIndex += 1\n    }\n\n    this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n      this.scrollToActiveOption()\n    })\n  }\n\n  makePrevSuggestOptionActive() {\n    const { activeOptionId, inputValue } = this.state\n    const { options: optionsProps } = this.props\n    const options = getFilteredOptions(optionsProps, inputValue)\n    if (options.length === 0) {\n      return\n    }\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex > 0) {\n      activeOptionIndex -= 1\n      this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n        this.scrollToActiveOption()\n      })\n    }\n  }\n\n  scrollToActiveOption(calledFromsuggestOpenMethod = false) {\n    const { activeOptionId } = this.state\n    const activeOptionDOM = this.element.querySelector(\n      `#select_box_option_${activeOptionId}`\n    )\n    const suggestListDOM = this.suggest.querySelector('ul')\n\n    if (activeOptionDOM && suggestListDOM) {\n      const activeOptionClientRect = activeOptionDOM.getBoundingClientRect()\n      const suggestListClientRect = suggestListDOM.getBoundingClientRect()\n      const suggestClientRect = this.suggest.getBoundingClientRect()\n\n      // вышли ЗА ВЕРХНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxTop =\n        activeOptionClientRect.top < suggestClientRect.top\n\n      // вышли ЗА НИЖНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxBottom =\n        activeOptionClientRect.top + activeOptionClientRect.height >\n        suggestClientRect.top + suggestClientRect.height\n\n      if (calledFromsuggestOpenMethod) {\n        // прокручиваем активный элемент К СЕРЕДИНЕ контейнера\n        const scrollTop =\n          activeOptionClientRect.top -\n          suggestListClientRect.top -\n          (suggestClientRect.height / 2 - activeOptionClientRect.height / 2)\n        this.suggest.scrollTop = scrollTop\n      } else if (isActiveOptionOutOfTheBoxTop) {\n        // прокручиваем активный элемент К ВЕРХУ контейнера\n        const scrollTop = activeOptionClientRect.top - suggestListClientRect.top\n        this.suggest.scrollTop = scrollTop\n      } else if (isActiveOptionOutOfTheBoxBottom) {\n        // прокручиваем активный элемент К НИЗУ контейнера\n        const scrollTop =\n          activeOptionClientRect.top -\n          suggestListClientRect.top -\n          (suggestClientRect.height - activeOptionClientRect.height)\n        this.suggest.scrollTop = scrollTop\n      }\n    }\n  }\n\n  render() {\n    const { error, label, mask, notFoundText, options, value, formatOption } =\n      this.props\n\n    const {\n      activeOptionId,\n      inputPlaceholder,\n      inputValue,\n      isSuggestWrapperClosing,\n      isSuggestWrapperOpening,\n      isSuggestWrapperVisible,\n    } = this.state\n\n    const componentClass = styles.SelectBox\n\n    const iconClass = cn(styles.SelectBox__Icon, {\n      [styles.SelectBox__Icon_suggest_visible]: isSuggestWrapperVisible,\n    })\n\n    const inputClass = styles.SelectBox__Input\n\n    const suggestWrapperClass = cn(styles.SelectBox__SuggestWrapper, {\n      [styles.SelectBox__SuggestWrapper_closing]: isSuggestWrapperClosing,\n      [styles.SelectBox__SuggestWrapper_opening]: isSuggestWrapperOpening,\n      [styles.SelectBox__SuggestWrapper_visible]: isSuggestWrapperVisible,\n    })\n\n    const suggestClass = styles.SelectBox__Suggest\n\n    const notFound = styles.SelectBox__NotFound\n\n    const filteredOptions = getFilteredOptions(options, inputValue)\n\n    return (\n      <div\n        ref={(el) => {\n          this.element = el\n          return this.element\n        }}\n        className={componentClass}\n      >\n        <div className={iconClass} onClick={this.handleIconClick}>\n          <IconCode />\n        </div>\n        <div\n          className={inputClass}\n          ref={(el) => {\n            this.inputWrapper = el\n            return this.inputWrapper\n          }}\n        >\n          <Input\n            error={error}\n            label={label}\n            mask={mask}\n            value={isSuggestWrapperClosing ? inputPlaceholder : inputValue}\n            placeholder={inputPlaceholder}\n            onBlur={this.handleInputBlur}\n            onChange={this.handleInputChange}\n            onFocus={this.handleInputFocus}\n            onKeyDown={this.handleKeyDown}\n          />\n        </div>\n        <div className={suggestWrapperClass}>\n          <div\n            className={suggestClass}\n            ref={(el) => {\n              this.suggest = el\n              return this.suggest\n            }}\n          >\n            {filteredOptions.length > 0 ? (\n              <Suggest\n                activeOptionId={activeOptionId}\n                optionSearchMask={inputValue}\n                options={filteredOptions}\n                value={value}\n                formatOption={formatOption}\n                onChange={this.handleSuggestChange}\n                onItemHover={this.handleSuggestItemHover}\n              />\n            ) : (\n              <div className={notFound}>{notFoundText}</div>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nSelectBox.propTypes = {\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  label: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n    PropTypes.string,\n  ]),\n  notFoundText: PropTypes.string,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      name: PropTypes.string,\n    })\n  ),\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  mask: PropTypes.string,\n  isSuggestWrapperVisible: PropTypes.bool,\n  formatOption: PropTypes.func,\n  onChange: PropTypes.func,\n}\n\nSelectBox.defaultProps = {\n  error: null,\n  label: null,\n  notFoundText: 'Совпадений не найдено',\n  options: [],\n  value: null,\n  mask: null,\n  isSuggestWrapperVisible: false,\n\n  formatOption: (name, option) => name, // eslint-disable-line no-unused-vars\n  onChange: (id, props) => {}, // eslint-disable-line no-unused-vars\n}\n\nexport default SelectBox\n"],"sourceRoot":""}