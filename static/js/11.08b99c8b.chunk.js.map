{"version":3,"sources":["forms/RegistrationForm/index.jsx","components/Checkbox/styles.module.scss","components/Checkbox/index.jsx","forms/ChangeClientDataForm/index.jsx","components/InputSuggest/index.jsx","components/InputSuggest/styles.module.scss"],"names":["getFakeDadata","Promise","resolve","id","name","data","legalAddress","ogrn","kpp","inn","ceoFio","schema","yup","email","required","REQUIRED_MESSAGE","password","nameOfTheLegalEntity","phone","isExistDadata","dadata","undefined","Object","keys","length","RegistrationForm","useForm","mode","defaultValues","resolver","yupResolver","control","handleSubmit","setValue","handleLegalEntityChange","field","value","_","shouldValidate","onChange","size","onSubmit","console","log","render","fieldState","label","error","message","getOptionsMethod","mask","variant","module","exports","Checkbox","props","checked","children","otherProps","labelClass","cn","styles","Checkbox__Label","Checkbox__Label_checked","className","type","e","target","defaultProps","getFakeOptions","house","street","city","FAKE_REASONS_FOR_LIVING","validateAddressByDadata","object","test","Yup","people","of","shape","reasonOfLiving","when","is","Boolean","then","otherwise","addressRegistration","realAddress","ChangeClientDataForm","areTheSameAddresses","watch","fields","useFieldArray","handleAddressChange","H","map","index","FormRow","InputSuggest","SelectBox","options","style","margin","Row","Col","Button","removeBackslash","replace","_getOptionsTimeout","state","activeOptionId","isGettingOptions","isSuggestWrapperVisible","handleInputBlur","bind","handleInputChange","handleInputFocus","handleKeyDown","handleSuggestChange","handleSuggestItemHover","callGetOptions","getOptions","makeNextSuggestOptionActive","makePrevSuggestOptionActive","scrollToActiveOption","suggestClose","suggestOpen","blur","focus","onBlur","this","setTimeout","setState","valueFormat","minLengthToCallGet","onFocus","onEnter","keyCode","preventDefault","activeOption","find","o","inputWrapper","querySelector","nameFormat","clearTimeout","optionsToShow","stateProps","catch","activeOptionIndex","findIndex","activeOptionDOM","element","suggestListDOM","suggest","activeOptionClientRect","getBoundingClientRect","suggestListClientRect","suggestClientRect","isActiveOptionOutOfTheBoxTop","top","isActiveOptionOutOfTheBoxBottom","height","scrollTop","input","formatOption","inputProps","componentClass","inputClass","InputSuggest__Input","suggestWrapperClass","InputSuggest__SuggestWrapper","InputSuggest__SuggestWrapper_visible","suggestClass","InputSuggest__Suggest","ref","el","onKeyDown","optionSearchMask","onItemHover","Component","option","query","count","fromSuggest"],"mappings":"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","file":"static/js/11.08b99c8b.chunk.js","sourcesContent":["import React from 'react'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as yup from 'yup'\n\n// Components\nimport H from '../../components/H'\nimport FormRow from '../../components/FormRow'\nimport Row from '../../components/Grid/Row'\nimport Col from '../../components/Grid/Col'\nimport Input from '../../components/Input'\nimport Button from '../../components/Button'\nimport InputSuggest from '../../components/InputSuggest'\n\nimport { REQUIRED_MESSAGE } from '../../constants/errors'\n\nconst getFakeDadata = () =>\n  Promise.resolve([\n    {\n      id: 1,\n      name: 'Сверх Разум',\n      data: {\n        legalAddress: 'г. Калининград, ул. Ленина, д.124',\n        ogrn: '1238213818238128318',\n        kpp: '12391919239123912391923',\n        inn: '19934923942934',\n        ceoFio: 'Сверх Разум Разумович',\n      },\n    },\n    {\n      id: 2,\n      name: 'Джо Роган',\n      data: {\n        legalAddress: 'г. Санкт-Петербург, ул. Пойменная, д.22',\n        ogrn: '23942934923942934',\n        kpp: '39429348234828348',\n        inn: '93429349239423949234',\n        ceoFio: 'Джо Роган Подкастович',\n      },\n    },\n  ])\n\nconst schema = yup.object({\n  email: yup.string().required(REQUIRED_MESSAGE),\n  password: yup.string().required(REQUIRED_MESSAGE),\n  nameOfTheLegalEntity: yup.string().required(REQUIRED_MESSAGE),\n  phone: yup.string().required(REQUIRED_MESSAGE),\n  ogrn: yup.string().required(REQUIRED_MESSAGE),\n})\n\nexport const isExistDadata = (dadata = undefined) =>\n  dadata && Object.keys(dadata).length > 0\n\nfunction RegistrationForm() {\n  const { control, handleSubmit, setValue } = useForm({\n    mode: 'onChange',\n    defaultValues: {\n      email: undefined,\n      password: undefined,\n      nameOfTheLegalEntity: undefined,\n      legalAddress: undefined,\n      phone: undefined,\n      ogrn: undefined,\n      kpp: undefined,\n      inn: undefined,\n      ceoFio: undefined,\n    },\n    resolver: yupResolver(schema),\n  })\n\n  const onSubmit = (data) => {\n    console.log('success send -> ', data)\n  }\n\n  const handleLegalEntityChange = (field) => (value, _, dadata) => {\n    if (isExistDadata(dadata)) {\n      setValue('legalAddress', dadata.legalAddress)\n      setValue('ogrn', dadata.ogrn, { shouldValidate: true })\n      setValue('kpp', dadata.kpp)\n      setValue('inn', dadata.inn)\n      setValue('ceoFio', dadata.ceoFio)\n    }\n    field.onChange(value)\n  }\n\n  return (\n    <div>\n      <H size={2}>Регистрация</H>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormRow>\n          <Row>\n            <Col>\n              <Controller\n                control={control}\n                name=\"email\"\n                render={({ field, fieldState }) => (\n                  <Input\n                    {...field}\n                    label=\"Email *\"\n                    error={fieldState.error?.message}\n                  />\n                )}\n              />\n            </Col>\n            <Col>\n              <Controller\n                control={control}\n                name=\"password\"\n                render={({ field, fieldState }) => (\n                  <Input\n                    {...field}\n                    label=\"Пароль *\"\n                    error={fieldState.error?.message}\n                  />\n                )}\n              />\n            </Col>\n          </Row>\n        </FormRow>\n        <FormRow>\n          <Controller\n            control={control}\n            name=\"nameOfTheLegalEntity\"\n            render={({ field, fieldState }) => (\n              <InputSuggest\n                {...field}\n                getOptionsMethod={getFakeDadata}\n                onChange={handleLegalEntityChange(field)}\n                label=\"Название юр. лица *\"\n                error={fieldState.error?.message}\n              />\n            )}\n          />\n        </FormRow>\n        <FormRow>\n          <Controller\n            control={control}\n            name=\"legalAddress\"\n            render={({ field, fieldState }) => (\n              <Input\n                {...field}\n                error={fieldState.error?.message}\n                label=\"Юридический адрес\"\n              />\n            )}\n          />\n        </FormRow>\n        <FormRow>\n          <Col>\n            <Controller\n              name=\"phone\"\n              control={control}\n              render={({ field, fieldState }) => (\n                <Input\n                  {...field}\n                  mask=\"+7 (999) 999-99-99\"\n                  error={fieldState.error?.message}\n                  label=\"Телефон *\"\n                />\n              )}\n            />\n          </Col>\n          <Col />\n        </FormRow>\n        <FormRow>\n          <Row>\n            <Col>\n              <Controller\n                control={control}\n                name=\"ogrn\"\n                render={({ field, fieldState }) => (\n                  <Input\n                    {...field}\n                    mask=\"9999 99999 9999 9999\"\n                    error={fieldState.error?.message}\n                    label=\"ОГРН\"\n                  />\n                )}\n              />\n            </Col>\n            <Col>\n              <Controller\n                control={control}\n                name=\"kpp\"\n                render={({ field, fieldState }) => (\n                  <Input\n                    {...field}\n                    mask=\"999999999999\"\n                    error={fieldState.error?.message}\n                    label=\"КПП\"\n                  />\n                )}\n              />\n            </Col>\n          </Row>\n        </FormRow>\n\n        <FormRow>\n          <Row>\n            <Col>\n              <Controller\n                control={control}\n                name=\"inn\"\n                render={({ field, fieldState }) => (\n                  <Input\n                    {...field}\n                    mask=\"999999999999\"\n                    error={fieldState.error?.message}\n                    label=\"ИНН\"\n                  />\n                )}\n              />\n            </Col>\n            <Col>\n              <Controller\n                control={control}\n                name=\"ceoFio\"\n                render={({ field, fieldState }) => (\n                  <Input\n                    {...field}\n                    error={fieldState.error?.message}\n                    label=\"ФИО генерального директора\"\n                  />\n                )}\n              />\n            </Col>\n          </Row>\n        </FormRow>\n\n        <Row>\n          <Col />\n          <Col>\n            <Button variant=\"primary\">Создать аккаунт</Button>\n          </Col>\n        </Row>\n      </form>\n    </div>\n  )\n}\n\nexport default RegistrationForm\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checkbox\":\"styles_Checkbox__FLcPe\",\"Checkbox__Label\":\"styles_Checkbox__Label__1L6CP\",\"Checkbox__Label_checked\":\"styles_Checkbox__Label_checked__2k729\"};","import PropTypes from 'prop-types'\nimport cn from 'classnames'\n\nimport styles from './styles.module.scss'\n\nfunction Checkbox(props) {\n  const { checked, children, onChange, ...otherProps } = props\n\n  // Handlers\n  function handleChange(e) {\n    onChange(e.target.checked, props)\n  }\n\n  const labelClass = cn(styles.Checkbox__Label, {\n    [styles.Checkbox__Label_checked]: checked,\n  })\n\n  return (\n    <div className={styles.Checkbox}>\n      <label className={labelClass}>\n        <input\n          {...otherProps}\n          checked={checked}\n          type=\"checkbox\"\n          onChange={handleChange}\n        />\n        {children}\n      </label>\n    </div>\n  )\n}\n\nCheckbox.propTypes = {\n  checked: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n  onChange: PropTypes.func,\n}\nCheckbox.defaultProps = {\n  checked: false,\n  onChange: (checked, props) => {},\n}\n\nexport default Checkbox\n","import React from 'react'\nimport { Controller, useFieldArray, useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as Yup from 'yup'\nimport { object } from 'yup'\n\nimport H from '../../components/H'\nimport FormRow from '../../components/FormRow'\nimport InputSuggest from '../../components/InputSuggest'\nimport Checkbox from '../../components/Checkbox'\nimport SelectBox from '../../components/SelectBox'\nimport Row from '../../components/Grid/Row'\nimport Col from '../../components/Grid/Col'\nimport Button from '../../components/Button'\n\nimport { isExistDadata } from '../RegistrationForm'\n\nimport { REQUIRED_MESSAGE } from '../../constants/errors'\n\nconst getFakeOptions = () =>\n  Promise.resolve([\n    {\n      id: 1,\n      name: 'г. Москва, ул. Тверская, д.123',\n      data: {\n        house: 123,\n        street: 'Тверская',\n        city: 'Москва',\n      },\n    },\n    {\n      id: 2,\n      name: 'г. Калининград, ул. Какая-то, д.12',\n      data: {\n        house: 12,\n        street: 'Какая-то',\n        city: 'Калининград',\n      },\n    },\n  ])\n\nconst FAKE_REASONS_FOR_LIVING = [\n  {\n    id: 1,\n    name: 'Аренда',\n  },\n  {\n    id: 2,\n    name: 'Проживание у родственников',\n  },\n]\n\nconst ADDRESS_NOT_FROM_DADATA_ERROR = 'Адрес должен быть из подсказки'\nconst validateAddressByDadata = object().test(\n  'Проверка адреса по наличию дадаты',\n  ADDRESS_NOT_FROM_DADATA_ERROR,\n  ({ value, dadata }) => {\n    if (value) {\n      return isExistDadata(dadata)\n    }\n    return true\n  }\n)\n\nconst schema = Yup.object({\n  people: Yup.array().of(\n    Yup.object().shape({\n      reasonOfLiving: Yup.string().when(['realAddress'], {\n        is: ({ value }) => Boolean(value),\n        then: Yup.string().required(REQUIRED_MESSAGE),\n        otherwise: Yup.string(),\n      }),\n      addressRegistration: validateAddressByDadata,\n      realAddress: validateAddressByDadata,\n    })\n  ),\n})\n\nfunction ChangeClientDataForm() {\n  const { control, handleSubmit, watch } = useForm({\n    defaultValues: {\n      people: [\n        {\n          addressRegistration: {\n            value: undefined,\n            dadata: undefined,\n          },\n          realAddress: {\n            value: undefined,\n            dadata: undefined,\n          },\n          areTheSameAddresses: false,\n        },\n        {\n          addressRegistration: {\n            value: undefined,\n            dadata: undefined,\n          },\n          realAddress: {\n            value: undefined,\n            dadata: undefined,\n          },\n          areTheSameAddresses: false,\n        },\n      ],\n    },\n    resolver: yupResolver(schema),\n  })\n\n  const { fields } = useFieldArray({\n    control,\n    name: 'people',\n  })\n\n  const onSubmit = (data) => {\n    console.log('success submit -> ', data)\n  }\n\n  const handleAddressChange = (field) => (value, _, dadata) => {\n    field.onChange({\n      value,\n      dadata,\n    })\n  }\n\n  return (\n    <div>\n      <H size={1}>Изменение данных клиента</H>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {fields.map((field, index) => {\n          const areTheSameAddresses = watch(\n            `people.${index}.areTheSameAddresses`\n          )\n\n          return (\n            <div key={index}>\n              <FormRow>\n                <Controller\n                  name={`people.${index}.addressRegistration`}\n                  control={control}\n                  render={({ field, fieldState }) => (\n                    <InputSuggest\n                      {...field}\n                      getOptionsMethod={getFakeOptions}\n                      onChange={handleAddressChange(field)}\n                      value={field.value.value}\n                      error={fieldState.error?.message}\n                      label=\"Адрес регистрации\"\n                    />\n                  )}\n                />\n              </FormRow>\n\n              <FormRow>\n                <Controller\n                  name={`people.${index}.areTheSameAddresses`}\n                  control={control}\n                  render={({ field }) => (\n                    <Checkbox {...field} checked={field.value}>\n                      Адрес фактического проживания совпадает с адресом\n                      регистрации\n                    </Checkbox>\n                  )}\n                />\n              </FormRow>\n\n              {!areTheSameAddresses && (\n                <>\n                  <FormRow>\n                    <Controller\n                      name={`people.${index}.realAddress`}\n                      control={control}\n                      render={({ field, fieldState }) => (\n                        <InputSuggest\n                          {...field}\n                          getOptionsMethod={getFakeOptions}\n                          onChange={handleAddressChange(field)}\n                          value={field.value?.value}\n                          error={fieldState.error?.message}\n                          label=\"Адрес фактического проживания\"\n                        />\n                      )}\n                    />\n                  </FormRow>\n\n                  <FormRow>\n                    <Controller\n                      name={`people.${index}.reasonOfLiving`}\n                      control={control}\n                      render={({ field, fieldState }) => (\n                        <SelectBox\n                          {...field}\n                          options={FAKE_REASONS_FOR_LIVING}\n                          error={fieldState.error?.message}\n                          label=\"Основание для проживания\"\n                        />\n                      )}\n                    />\n                  </FormRow>\n                </>\n              )}\n\n              {fields.length !== index + 1 && (\n                <hr\n                  style={{\n                    margin: '30px 0',\n                  }}\n                />\n              )}\n            </div>\n          )\n        })}\n\n        <Row>\n          <Col />\n          <Col>\n            <Button type=\"submit\" variant=\"primary\">\n              Сохранить\n            </Button>\n          </Col>\n        </Row>\n      </form>\n    </div>\n  )\n}\n\nexport default ChangeClientDataForm\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\n\n// Components\nimport Input from '../Input'\nimport Suggest from '../Suggest'\n\nimport styles from './styles.module.scss'\n\nconst KEY_UP = 38\nconst KEY_DOWN = 40\nconst KEY_ENTER = 13\nconst KEY_ESC = 27\nconst SUGGEST_CLOSING_DELAY = 200\nconst SUGGEST_GET_OPTIONS_DELAY = 200\n\nconst removeBackslash = (value) =>\n  typeof value === 'string' ? value.replace(/\\\\/g, '') : value\n\nclass InputSuggest extends Component {\n  constructor(props) {\n    super(props)\n    this._getOptionsTimeout = null\n\n    this.state = {\n      activeOptionId: null,\n      isGettingOptions: false,\n      isSuggestWrapperVisible: false,\n      options: [],\n    }\n\n    this.handleInputBlur = this.handleInputBlur.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleInputFocus = this.handleInputFocus.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleSuggestChange = this.handleSuggestChange.bind(this)\n    this.handleSuggestItemHover = this.handleSuggestItemHover.bind(this)\n    this.callGetOptions = this.callGetOptions.bind(this)\n    this.getOptions = this.getOptions.bind(this)\n    this.makeNextSuggestOptionActive =\n      this.makeNextSuggestOptionActive.bind(this)\n    this.makePrevSuggestOptionActive =\n      this.makePrevSuggestOptionActive.bind(this)\n    this.scrollToActiveOption = this.scrollToActiveOption.bind(this)\n    this.suggestClose = this.suggestClose.bind(this)\n    this.suggestOpen = this.suggestOpen.bind(this)\n    this.blur = this.blur.bind(this)\n    this.focus = this.focus.bind(this)\n  }\n\n  // Input handlers\n  handleInputBlur(props) {\n    const { onBlur } = this.props\n    setTimeout(() => {\n      this.suggestClose()\n      this.setState({ activeOptionId: null, options: [] })\n      onBlur(props)\n    }, SUGGEST_CLOSING_DELAY)\n  }\n\n  handleInputChange(value) {\n    const valueFormat = removeBackslash(value)\n    const { onChange, minLengthToCallGet } = this.props\n    onChange(valueFormat, this.props)\n    if (valueFormat && valueFormat.length >= minLengthToCallGet) {\n      this.callGetOptions(valueFormat)\n    } else {\n      this.suggestClose()\n      this.setState({ activeOptionId: null, options: [] })\n    }\n  }\n\n  handleInputFocus() {\n    const { value, minLengthToCallGet, onFocus } = this.props\n    if (value && value.length >= minLengthToCallGet) {\n      this.callGetOptions(value)\n    }\n    onFocus(this.props)\n  }\n\n  handleKeyDown(e) {\n    const { isGettingOptions } = this.state\n    if (isGettingOptions) {\n      return false\n    }\n    const { onEnter, value } = this.props\n    const { activeOptionId, isSuggestWrapperVisible, options } = this.state\n\n    switch (e.keyCode) {\n      case KEY_DOWN:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makeNextSuggestOptionActive()\n        }\n        break\n      case KEY_UP:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makePrevSuggestOptionActive()\n        }\n        break\n      case KEY_ENTER:\n        e.preventDefault()\n\n        // Саджест открыт\n        if (isSuggestWrapperVisible) {\n          const activeOption = options.find((o) => o.id === activeOptionId)\n          // И есть выбранная опция\n          if (activeOption) {\n            this.handleSuggestChange(activeOption)\n          } else {\n            onEnter(value, false, this.props)\n          }\n          this.suggestClose()\n        } else {\n          onEnter(value, false, this.props)\n        }\n        this.inputWrapper.querySelector('input').blur()\n\n        break\n      case KEY_ESC:\n        this.handleInputBlur()\n        break\n      default:\n        break\n    }\n    return undefined\n  }\n\n  // Suggest handlers\n  handleSuggestChange({ name, data = {} }) {\n    const nameFormat = removeBackslash(name)\n    const { onChange, onEnter } = this.props\n    onChange(nameFormat, this.props, data)\n    onEnter(nameFormat, true, this.props, data)\n  }\n\n  handleSuggestItemHover({ id }) {\n    this.setState({ activeOptionId: id })\n  }\n\n  /* eslint-disable */\n  // Options methods\n  callGetOptions(value) {\n    if (this._getOptionsTimeout) {\n      clearTimeout(this._getOptionsTimeout)\n    }\n    this._getOptionsTimeout = setTimeout(() => {\n      this.getOptions(value)\n    }, SUGGEST_GET_OPTIONS_DELAY)\n  }\n  /* eslint-enable */\n\n  getOptions(value) {\n    this.setState({ isGettingOptions: true })\n    const { getOptionsMethod, optionsToShow } = this.props\n\n    getOptionsMethod(value, optionsToShow)\n      .then((options) => {\n        let stateProps = {\n          activeOptionId: null,\n          isGettingOptions: false,\n          options,\n        }\n        if (options.length > 0) {\n          this.suggestOpen()\n          // Если список опций в \"саджесте\" НЕ пустой,\n          // то выбираем первую опцию в качестве activeOptionId\n          stateProps = {\n            ...stateProps,\n            activeOptionId: options[0].id,\n          }\n        }\n        this.setState(stateProps, () => {\n          this.scrollToActiveOption()\n        })\n      })\n      .catch(() => {\n        this.setState({\n          activeOptionId: null,\n          isGettingOptions: false,\n          options: [],\n        })\n      })\n  }\n\n  makeNextSuggestOptionActive() {\n    const { options, activeOptionId } = this.state\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex === -1) {\n      activeOptionIndex = 0\n    } else if (activeOptionIndex + 1 < options.length) {\n      activeOptionIndex += 1\n    }\n    this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n      this.scrollToActiveOption()\n    })\n  }\n\n  makePrevSuggestOptionActive() {\n    const { options, activeOptionId } = this.state\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex > 0) {\n      activeOptionIndex -= 1\n      this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n        this.scrollToActiveOption()\n      })\n    }\n  }\n\n  scrollToActiveOption() {\n    const { activeOptionId } = this.state\n    const activeOptionDOM = this.element.querySelector(\n      `#select_box_option_${activeOptionId}`\n    )\n    const suggestListDOM = this.suggest.querySelector('ul')\n\n    if (activeOptionDOM && suggestListDOM) {\n      const activeOptionClientRect = activeOptionDOM.getBoundingClientRect()\n      const suggestListClientRect = suggestListDOM.getBoundingClientRect()\n      const suggestClientRect = this.suggest.getBoundingClientRect()\n\n      // вышли ЗА ВЕРХНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxTop =\n        activeOptionClientRect.top < suggestClientRect.top\n\n      // вышли ЗА НИЖНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxBottom =\n        activeOptionClientRect.top + activeOptionClientRect.height >\n        suggestClientRect.top + suggestClientRect.height\n\n      if (isActiveOptionOutOfTheBoxTop) {\n        // прокручиваем активный элемент К ВЕРХУ контейнера\n        const scrollTop = activeOptionClientRect.top - suggestListClientRect.top\n        this.suggest.scrollTop = scrollTop\n      } else if (isActiveOptionOutOfTheBoxBottom) {\n        // прокручиваем активный элемент К НИЗУ контейнера\n        const scrollTop =\n          activeOptionClientRect.top -\n          suggestListClientRect.top -\n          (suggestClientRect.height - activeOptionClientRect.height)\n        this.suggest.scrollTop = scrollTop\n      }\n    }\n  }\n\n  // Suggest methods\n  suggestClose() {\n    this.setState({\n      activeOptionId: null,\n      isSuggestWrapperVisible: false,\n    })\n  }\n\n  suggestOpen() {\n    this.setState({ isSuggestWrapperVisible: true })\n  }\n\n  // Input methods\n  blur() {\n    this.input.blur()\n  }\n\n  focus() {\n    this.input.focus()\n  }\n\n  render() {\n    const {\n      error,\n      label,\n      minLengthToCallGet,\n      optionsToShow,\n      value,\n      formatOption,\n      getOptionsMethod,\n      onBlur,\n      onChange,\n      onEnter,\n      onFocus,\n      ...inputProps\n    } = this.props\n\n    const { activeOptionId, isSuggestWrapperVisible, options } = this.state\n\n    const componentClass = styles.InputSuggest\n\n    const inputClass = styles.InputSuggest__Input\n\n    const suggestWrapperClass = cn(styles.InputSuggest__SuggestWrapper, {\n      [styles.InputSuggest__SuggestWrapper_visible]:\n        isSuggestWrapperVisible && options.length > 0,\n    })\n\n    const suggestClass = styles.InputSuggest__Suggest\n\n    return (\n      <div\n        ref={(el) => {\n          this.element = el\n          return this.element\n        }}\n        className={componentClass}\n      >\n        <div\n          className={inputClass}\n          ref={(el) => {\n            this.inputWrapper = el\n            return this.inputWrapper\n          }}\n        >\n          <Input\n            error={error}\n            label={label}\n            ref={(el) => {\n              this.input = el\n              return this.input\n            }}\n            value={value}\n            onBlur={this.handleInputBlur}\n            onChange={this.handleInputChange}\n            onFocus={this.handleInputFocus}\n            onKeyDown={this.handleKeyDown}\n            {...inputProps}\n          />\n        </div>\n        <div className={suggestWrapperClass}>\n          <div\n            className={suggestClass}\n            ref={(el) => {\n              this.suggest = el\n              return this.suggest\n            }}\n          >\n            <Suggest\n              activeOptionId={activeOptionId}\n              optionSearchMask={value}\n              options={options}\n              value={value}\n              formatOption={formatOption}\n              onChange={this.handleSuggestChange}\n              onItemHover={this.handleSuggestItemHover}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nInputSuggest.propTypes = {\n  error: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  minLengthToCallGet: PropTypes.number,\n  optionsToShow: PropTypes.number,\n  value: PropTypes.string,\n\n  formatOption: PropTypes.func,\n  getOptionsMethod: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onEnter: PropTypes.func,\n  onFocus: PropTypes.func,\n}\n\nInputSuggest.defaultProps = {\n  error: null,\n  label: null,\n  minLengthToCallGet: 2,\n  optionsToShow: 5,\n  value: null,\n\n  formatOption: (name, option) => name,\n  getOptionsMethod: (query, count) => Promise.resolve([]),\n  onBlur: (props) => {},\n  onChange: (name, props, data) => {},\n  onEnter: (value, fromSuggest, props, data) => {},\n  onFocus: (props) => {},\n}\n\nexport default InputSuggest\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputSuggest\":\"styles_InputSuggest__2A8yc\",\"InputSuggest__Input\":\"styles_InputSuggest__Input__3M6I2\",\"InputSuggest__SuggestWrapper\":\"styles_InputSuggest__SuggestWrapper__2oTlG\",\"InputSuggest__SuggestWrapper_closing\":\"styles_InputSuggest__SuggestWrapper_closing__2dtNH\",\"InputSuggest__SuggestWrapper_opening\":\"styles_InputSuggest__SuggestWrapper_opening__1rdBj\",\"InputSuggest__SuggestWrapper_visible\":\"styles_InputSuggest__SuggestWrapper_visible__7InKm\",\"InputSuggest__Suggest\":\"styles_InputSuggest__Suggest__23iYc\"};"],"sourceRoot":""}