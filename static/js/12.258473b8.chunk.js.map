{"version":3,"sources":["api/dadata.js","forms/ContractorDataForm/index.jsx","components/InputSuggest/index.jsx","components/InputSuggest/styles.module.scss","components/Grid/index.js"],"names":["getDadataCall","type","query","count","part","fetch","headers","method","body","JSON","stringify","parts","undefined","then","response","json","suggestions","map","item","index","id","name","value","data","catch","error","console","log","getAddresses","getNames","getPatronymics","getSurnames","ContractorSchema","yup","surname","required","REQUIRED_MESSAGE","cityzenship","address","when","is","val","String","ContractorDataForm","useForm","resolver","yupResolver","control","handleSubmit","isNativeCitizen","watch","autoComplete","onSubmit","alert","H","size","FormRow","render","field","fieldState","InputSuggest","getOptionsMethod","label","message","formState","SelectBox","options","shouldUnregister","Button","variant","removeBackslash","replace","props","_getOptionsTimeout","state","activeOptionId","isGettingOptions","isSuggestWrapperVisible","handleInputBlur","bind","handleInputChange","handleInputFocus","handleKeyDown","handleSuggestChange","handleSuggestItemHover","callGetOptions","getOptions","makeNextSuggestOptionActive","makePrevSuggestOptionActive","scrollToActiveOption","suggestClose","suggestOpen","blur","focus","onBlur","this","setTimeout","setState","valueFormat","onChange","minLengthToCallGet","length","onFocus","e","onEnter","keyCode","preventDefault","activeOption","find","o","inputWrapper","querySelector","nameFormat","clearTimeout","optionsToShow","stateProps","activeOptionIndex","findIndex","activeOptionDOM","element","suggestListDOM","suggest","activeOptionClientRect","getBoundingClientRect","suggestListClientRect","suggestClientRect","isActiveOptionOutOfTheBoxTop","top","isActiveOptionOutOfTheBoxBottom","height","scrollTop","input","formatOption","inputProps","componentClass","styles","inputClass","InputSuggest__Input","suggestWrapperClass","cn","InputSuggest__SuggestWrapper","InputSuggest__SuggestWrapper_visible","suggestClass","InputSuggest__Suggest","ref","el","className","onKeyDown","optionSearchMask","onItemHover","Component","defaultProps","option","Promise","resolve","fromSuggest","module","exports"],"mappings":"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","file":"static/js/12.258473b8.chunk.js","sourcesContent":["const getDadataCall =\n  (type) =>\n  (query, count = 5, part = null) =>\n    fetch(\n      `https://front-dhr-st1.dhr-st.dc-yc.b-pl.pro/dadata/suggestions/api/4_1/rs/suggest/${type}/`,\n      {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        method: 'POST',\n        body: JSON.stringify({\n          count,\n          parts: part ? [part] : undefined,\n          query,\n        }),\n      }\n    )\n      .then((response) => response.json())\n      .then((response) =>\n        response.suggestions.map((item, index) => ({\n          id: index,\n          name: item.value,\n          data: item,\n        }))\n      )\n      .catch((error) => {\n        console.log('error', error)\n        return []\n      })\n\nexport const getAddresses = getDadataCall('address')\nexport const getCompanies = getDadataCall('party')\nexport const getNames = getDadataCall('fio', 'NAME')\nexport const getPatronymics = getDadataCall('fio', 'PATRONYMIC')\nexport const getSurnames = getDadataCall('fio', 'SURNAME')\n","import { Controller, useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as yup from 'yup'\n\n// API\nimport {\n  getAddresses,\n  getNames,\n  getPatronymics,\n  getSurnames,\n} from '../../api/dadata'\n\n// Components\nimport Button from '../../components/Button'\nimport FormRow from '../../components/FormRow'\nimport { Col, Row } from '../../components/Grid'\nimport H from '../../components/H'\nimport InputSuggest from '../../components/InputSuggest'\nimport SelectBox from '../../components/SelectBox'\nimport { REQUIRED_MESSAGE } from '../../constants/errors'\n\nconst NATIVE_CITIZEN = 1\nconst FOREIGN_CITIZEN = 2\n\nconst ContractorSchema = yup.object({\n  surname: yup.string().required(REQUIRED_MESSAGE),\n  name: yup.string().required(REQUIRED_MESSAGE),\n  cityzenship: yup.string().required(REQUIRED_MESSAGE),\n  address: yup.string().when('cityzenship', {\n    is: (val) => val === String(NATIVE_CITIZEN),\n    then: yup.string().required(REQUIRED_MESSAGE),\n  }),\n})\n\nfunction ContractorDataForm() {\n  const { control, handleSubmit, watch } = useForm({\n    resolver: yupResolver(ContractorSchema),\n  })\n\n  const onSubmit = (data) => {\n    alert(JSON.stringify(data))\n  }\n\n  const isNativeCitizen = watch('cityzenship') === NATIVE_CITIZEN\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n      <H size=\"1\">Данные исполнителя</H>\n      <Row>\n        <Col>\n          <FormRow>\n            <Controller\n              control={control}\n              name=\"surname\"\n              render={({ field, fieldState }) => (\n                <InputSuggest\n                  {...field}\n                  getOptionsMethod={getSurnames}\n                  label=\"Фамилия *\"\n                  error={fieldState.error?.message}\n                />\n              )}\n            />\n          </FormRow>\n        </Col>\n        <Col>\n          <FormRow>\n            <Controller\n              control={control}\n              name=\"name\"\n              render={({ field, fieldState }) => (\n                <InputSuggest\n                  {...field}\n                  getOptionsMethod={getNames}\n                  label=\"Имя *\"\n                  error={fieldState.error?.message}\n                />\n              )}\n            />\n          </FormRow>\n        </Col>\n        <Col>\n          <FormRow>\n            <Controller\n              control={control}\n              name=\"patronymic\"\n              render={({ field, fieldState }) => (\n                <InputSuggest\n                  {...field}\n                  getOptionsMethod={getPatronymics}\n                  label=\"Отчество\"\n                  error={fieldState.error?.message}\n                />\n              )}\n            />\n          </FormRow>\n        </Col>\n        <Col>\n          <FormRow>\n            <Controller\n              name=\"cityzenship\"\n              control={control}\n              render={({ field, fieldState, formState }) => {\n                return (\n                  <SelectBox\n                    {...field}\n                    label=\"Гражданство *\"\n                    name=\"cityzenship\"\n                    options={[\n                      { id: NATIVE_CITIZEN, name: 'Гражданство РФ' },\n                      { id: FOREIGN_CITIZEN, name: 'Иностранный гражданин' },\n                    ]}\n                    error={fieldState.error?.message}\n                  />\n                )\n              }}\n            />\n          </FormRow>\n        </Col>\n      </Row>\n      {isNativeCitizen && (\n        <FormRow>\n          <Controller\n            shouldUnregister\n            control={control}\n            name=\"address\"\n            render={({ field, fieldState }) => (\n              <InputSuggest\n                {...field}\n                getOptionsMethod={getAddresses}\n                label=\"Адрес регистрации *\"\n                error={fieldState.error?.message}\n              />\n            )}\n          />\n        </FormRow>\n      )}\n      <Row>\n        <Col />\n        <Col>\n          <Button variant=\"primary\">Отправить на анализ</Button>\n        </Col>\n      </Row>\n    </form>\n  )\n}\n\nexport default ContractorDataForm\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\n\n// Components\nimport Input from '../Input'\nimport Suggest from '../Suggest'\n\nimport styles from './styles.module.scss'\n\nconst KEY_UP = 38\nconst KEY_DOWN = 40\nconst KEY_ENTER = 13\nconst KEY_ESC = 27\nconst SUGGEST_CLOSING_DELAY = 200\nconst SUGGEST_GET_OPTIONS_DELAY = 200\n\nconst removeBackslash = (value) =>\n  typeof value === 'string' ? value.replace(/\\\\/g, '') : value\n\nclass InputSuggest extends Component {\n  constructor(props) {\n    super(props)\n    this._getOptionsTimeout = null\n\n    this.state = {\n      activeOptionId: null,\n      isGettingOptions: false,\n      isSuggestWrapperVisible: false,\n      options: [],\n    }\n\n    this.handleInputBlur = this.handleInputBlur.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleInputFocus = this.handleInputFocus.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleSuggestChange = this.handleSuggestChange.bind(this)\n    this.handleSuggestItemHover = this.handleSuggestItemHover.bind(this)\n    this.callGetOptions = this.callGetOptions.bind(this)\n    this.getOptions = this.getOptions.bind(this)\n    this.makeNextSuggestOptionActive =\n      this.makeNextSuggestOptionActive.bind(this)\n    this.makePrevSuggestOptionActive =\n      this.makePrevSuggestOptionActive.bind(this)\n    this.scrollToActiveOption = this.scrollToActiveOption.bind(this)\n    this.suggestClose = this.suggestClose.bind(this)\n    this.suggestOpen = this.suggestOpen.bind(this)\n    this.blur = this.blur.bind(this)\n    this.focus = this.focus.bind(this)\n  }\n\n  // Input handlers\n  handleInputBlur(props) {\n    const { onBlur } = this.props\n    setTimeout(() => {\n      this.suggestClose()\n      this.setState({ activeOptionId: null, options: [] })\n      onBlur(props)\n    }, SUGGEST_CLOSING_DELAY)\n  }\n\n  handleInputChange(value) {\n    const valueFormat = removeBackslash(value)\n    const { onChange, minLengthToCallGet } = this.props\n    onChange(valueFormat, this.props)\n    if (valueFormat && valueFormat.length >= minLengthToCallGet) {\n      this.callGetOptions(valueFormat)\n    } else {\n      this.suggestClose()\n      this.setState({ activeOptionId: null, options: [] })\n    }\n  }\n\n  handleInputFocus() {\n    const { value, minLengthToCallGet, onFocus } = this.props\n    if (value && value.length >= minLengthToCallGet) {\n      this.callGetOptions(value)\n    }\n    onFocus(this.props)\n  }\n\n  handleKeyDown(e) {\n    const { isGettingOptions } = this.state\n    if (isGettingOptions) {\n      return false\n    }\n    const { onEnter, value } = this.props\n    const { activeOptionId, isSuggestWrapperVisible, options } = this.state\n\n    switch (e.keyCode) {\n      case KEY_DOWN:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makeNextSuggestOptionActive()\n        }\n        break\n      case KEY_UP:\n        e.preventDefault()\n        if (isSuggestWrapperVisible) {\n          this.makePrevSuggestOptionActive()\n        }\n        break\n      case KEY_ENTER:\n        e.preventDefault()\n\n        // Саджест открыт\n        if (isSuggestWrapperVisible) {\n          const activeOption = options.find((o) => o.id === activeOptionId)\n          // И есть выбранная опция\n          if (activeOption) {\n            this.handleSuggestChange(activeOption)\n          } else {\n            onEnter(value, false, this.props)\n          }\n          this.suggestClose()\n        } else {\n          onEnter(value, false, this.props)\n        }\n        this.inputWrapper.querySelector('input').blur()\n\n        break\n      case KEY_ESC:\n        this.handleInputBlur()\n        break\n      default:\n        break\n    }\n    return undefined\n  }\n\n  // Suggest handlers\n  handleSuggestChange({ name, data = {} }) {\n    const nameFormat = removeBackslash(name)\n    const { onChange, onEnter } = this.props\n    onChange(nameFormat, this.props, data)\n    onEnter(nameFormat, true, this.props, data)\n  }\n\n  handleSuggestItemHover({ id }) {\n    this.setState({ activeOptionId: id })\n  }\n\n  /* eslint-disable */\n  // Options methods\n  callGetOptions(value) {\n    if (this._getOptionsTimeout) {\n      clearTimeout(this._getOptionsTimeout)\n    }\n    this._getOptionsTimeout = setTimeout(() => {\n      this.getOptions(value)\n    }, SUGGEST_GET_OPTIONS_DELAY)\n  }\n  /* eslint-enable */\n\n  getOptions(value) {\n    this.setState({ isGettingOptions: true })\n    const { getOptionsMethod, optionsToShow } = this.props\n\n    getOptionsMethod(value, optionsToShow)\n      .then((options) => {\n        let stateProps = {\n          activeOptionId: null,\n          isGettingOptions: false,\n          options,\n        }\n        if (options.length > 0) {\n          this.suggestOpen()\n          // Если список опций в \"саджесте\" НЕ пустой,\n          // то выбираем первую опцию в качестве activeOptionId\n          stateProps = {\n            ...stateProps,\n            activeOptionId: options[0].id,\n          }\n        }\n        this.setState(stateProps, () => {\n          this.scrollToActiveOption()\n        })\n      })\n      .catch(() => {\n        this.setState({\n          activeOptionId: null,\n          isGettingOptions: false,\n          options: [],\n        })\n      })\n  }\n\n  makeNextSuggestOptionActive() {\n    const { options, activeOptionId } = this.state\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex === -1) {\n      activeOptionIndex = 0\n    } else if (activeOptionIndex + 1 < options.length) {\n      activeOptionIndex += 1\n    }\n    this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n      this.scrollToActiveOption()\n    })\n  }\n\n  makePrevSuggestOptionActive() {\n    const { options, activeOptionId } = this.state\n\n    let activeOptionIndex = options.findIndex((o) => o.id === activeOptionId)\n    if (activeOptionIndex > 0) {\n      activeOptionIndex -= 1\n      this.setState({ activeOptionId: options[activeOptionIndex].id }, () => {\n        this.scrollToActiveOption()\n      })\n    }\n  }\n\n  scrollToActiveOption() {\n    const { activeOptionId } = this.state\n    const activeOptionDOM = this.element.querySelector(\n      `#select_box_option_${activeOptionId}`\n    )\n    const suggestListDOM = this.suggest.querySelector('ul')\n\n    if (activeOptionDOM && suggestListDOM) {\n      const activeOptionClientRect = activeOptionDOM.getBoundingClientRect()\n      const suggestListClientRect = suggestListDOM.getBoundingClientRect()\n      const suggestClientRect = this.suggest.getBoundingClientRect()\n\n      // вышли ЗА ВЕРХНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxTop =\n        activeOptionClientRect.top < suggestClientRect.top\n\n      // вышли ЗА НИЖНЮЮ границу контейнера\n      const isActiveOptionOutOfTheBoxBottom =\n        activeOptionClientRect.top + activeOptionClientRect.height >\n        suggestClientRect.top + suggestClientRect.height\n\n      if (isActiveOptionOutOfTheBoxTop) {\n        // прокручиваем активный элемент К ВЕРХУ контейнера\n        const scrollTop = activeOptionClientRect.top - suggestListClientRect.top\n        this.suggest.scrollTop = scrollTop\n      } else if (isActiveOptionOutOfTheBoxBottom) {\n        // прокручиваем активный элемент К НИЗУ контейнера\n        const scrollTop =\n          activeOptionClientRect.top -\n          suggestListClientRect.top -\n          (suggestClientRect.height - activeOptionClientRect.height)\n        this.suggest.scrollTop = scrollTop\n      }\n    }\n  }\n\n  // Suggest methods\n  suggestClose() {\n    this.setState({\n      activeOptionId: null,\n      isSuggestWrapperVisible: false,\n    })\n  }\n\n  suggestOpen() {\n    this.setState({ isSuggestWrapperVisible: true })\n  }\n\n  // Input methods\n  blur() {\n    this.input.blur()\n  }\n\n  focus() {\n    this.input.focus()\n  }\n\n  render() {\n    const {\n      error,\n      label,\n      minLengthToCallGet,\n      optionsToShow,\n      value,\n      formatOption,\n      getOptionsMethod,\n      onBlur,\n      onChange,\n      onEnter,\n      onFocus,\n      ...inputProps\n    } = this.props\n\n    const { activeOptionId, isSuggestWrapperVisible, options } = this.state\n\n    const componentClass = styles.InputSuggest\n\n    const inputClass = styles.InputSuggest__Input\n\n    const suggestWrapperClass = cn(styles.InputSuggest__SuggestWrapper, {\n      [styles.InputSuggest__SuggestWrapper_visible]:\n        isSuggestWrapperVisible && options.length > 0,\n    })\n\n    const suggestClass = styles.InputSuggest__Suggest\n\n    return (\n      <div\n        ref={(el) => {\n          this.element = el\n          return this.element\n        }}\n        className={componentClass}\n      >\n        <div\n          className={inputClass}\n          ref={(el) => {\n            this.inputWrapper = el\n            return this.inputWrapper\n          }}\n        >\n          <Input\n            error={error}\n            label={label}\n            ref={(el) => {\n              this.input = el\n              return this.input\n            }}\n            value={value}\n            onBlur={this.handleInputBlur}\n            onChange={this.handleInputChange}\n            onFocus={this.handleInputFocus}\n            onKeyDown={this.handleKeyDown}\n            {...inputProps}\n          />\n        </div>\n        <div className={suggestWrapperClass}>\n          <div\n            className={suggestClass}\n            ref={(el) => {\n              this.suggest = el\n              return this.suggest\n            }}\n          >\n            <Suggest\n              activeOptionId={activeOptionId}\n              optionSearchMask={value}\n              options={options}\n              value={value}\n              formatOption={formatOption}\n              onChange={this.handleSuggestChange}\n              onItemHover={this.handleSuggestItemHover}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nInputSuggest.propTypes = {\n  error: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  minLengthToCallGet: PropTypes.number,\n  optionsToShow: PropTypes.number,\n  value: PropTypes.string,\n\n  formatOption: PropTypes.func,\n  getOptionsMethod: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onEnter: PropTypes.func,\n  onFocus: PropTypes.func,\n}\n\nInputSuggest.defaultProps = {\n  error: null,\n  label: null,\n  minLengthToCallGet: 2,\n  optionsToShow: 5,\n  value: null,\n\n  formatOption: (name, option) => name,\n  getOptionsMethod: (query, count) => Promise.resolve([]),\n  onBlur: (props) => {},\n  onChange: (name, props, data) => {},\n  onEnter: (value, fromSuggest, props, data) => {},\n  onFocus: (props) => {},\n}\n\nexport default InputSuggest\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputSuggest\":\"styles_InputSuggest__2A8yc\",\"InputSuggest__Input\":\"styles_InputSuggest__Input__3M6I2\",\"InputSuggest__SuggestWrapper\":\"styles_InputSuggest__SuggestWrapper__2oTlG\",\"InputSuggest__SuggestWrapper_closing\":\"styles_InputSuggest__SuggestWrapper_closing__2dtNH\",\"InputSuggest__SuggestWrapper_opening\":\"styles_InputSuggest__SuggestWrapper_opening__1rdBj\",\"InputSuggest__SuggestWrapper_visible\":\"styles_InputSuggest__SuggestWrapper_visible__7InKm\",\"InputSuggest__Suggest\":\"styles_InputSuggest__Suggest__23iYc\"};","import Col from './Col'\nimport Row from './Row'\n\nexport { Col, Row }\n"],"sourceRoot":""}